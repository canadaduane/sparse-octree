[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/core/CubicOctant.js",
    "content": "import { Vector3 } from \"math-ds\";\r\nimport { layout } from \"./layout.js\";\r\n\r\n/**\r\n * A vector.\r\n *\r\n * @type {Vector3}\r\n * @private\r\n */\r\n\r\nconst c = new Vector3();\r\n\r\n/**\r\n * A cubic octant.\r\n *\r\n * @implements {Node}\r\n */\r\n\r\nexport class CubicOctant {\r\n\r\n\t/**\r\n\t * Constructs a new cubic octant.\r\n\t *\r\n\t * @param {Vector3} [min] - The lower bounds.\r\n\t * @param {Number} [size=0] - The size of the octant.\r\n\t */\r\n\r\n\tconstructor(min = new Vector3(), size = 0) {\r\n\r\n\t\t/**\r\n\t\t * The lower bounds of this octant.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\r\n\t\tthis.min = min;\r\n\r\n\t\t/**\r\n\t\t * The size of this octant.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\r\n\t\tthis.size = size;\r\n\r\n\t\t/**\r\n\t\t * The children of this octant.\r\n\t\t *\r\n\t\t * @type {CubicOctant[]}\r\n\t\t */\r\n\r\n\t\tthis.children = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The upper bounds of this octant.\r\n\t *\r\n\t * Attention: Accessing this property creates a new vector!\r\n\t *\r\n\t * @type {Vector3}\r\n\t */\r\n\r\n\tget max() {\r\n\r\n\t\treturn this.min.clone().addScalar(this.size);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the center of this octant.\r\n\t *\r\n\t * @param {Vector3} target - A target vector.\r\n\t * @return {Vector3} The center.\r\n\t */\r\n\r\n\tgetCenter(target) {\r\n\r\n\t\treturn target.copy(this.min).addScalar(this.size * 0.5);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the size of this octant as a vector.\r\n\t *\r\n\t * @param {Vector3} target - A target vector.\r\n\t * @return {Vector3} The size.\r\n\t */\r\n\r\n\tgetDimensions(target) {\r\n\r\n\t\treturn target.set(this.size, this.size, this.size);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Splits this octant into eight smaller ones.\r\n\t */\r\n\r\n\tsplit() {\r\n\r\n\t\tconst min = this.min;\r\n\t\tconst mid = this.getCenter(c);\r\n\t\tconst halfSize = this.size * 0.5;\r\n\r\n\t\tconst children = this.children = [\r\n\t\t\tnull, null, null, null,\r\n\t\t\tnull, null, null, null\r\n\t\t];\r\n\r\n\t\tlet i, combination;\r\n\r\n\t\tfor(i = 0; i < 8; ++i) {\r\n\r\n\t\t\tcombination = layout[i];\r\n\r\n\t\t\tchildren[i] = new this.constructor(\r\n\r\n\t\t\t\tnew Vector3(\r\n\t\t\t\t\t(combination[0] === 0) ? min.x : mid.x,\r\n\t\t\t\t\t(combination[1] === 0) ? min.y : mid.y,\r\n\t\t\t\t\t(combination[2] === 0) ? min.z : mid.z\r\n\t\t\t\t),\r\n\r\n\t\t\t\thalfSize\r\n\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/core/CubicOctant.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "c",
    "memberof": "src/core/CubicOctant.js",
    "static": true,
    "longname": "src/core/CubicOctant.js~c",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "A vector.",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "CubicOctant",
    "memberof": "src/core/CubicOctant.js",
    "static": true,
    "longname": "src/core/CubicOctant.js~CubicOctant",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{CubicOctant}",
    "description": "A cubic octant.",
    "lineNumber": 19,
    "interface": false,
    "implements": [
      "Node"
    ]
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#constructor",
    "access": "public",
    "description": "Constructs a new cubic octant.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "min",
        "description": "The lower bounds."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "size",
        "description": "The size of the octant."
      }
    ]
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "min",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#min",
    "access": "public",
    "description": "The lower bounds of this octant.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "size",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#size",
    "access": "public",
    "description": "The size of this octant.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "children",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#children",
    "access": "public",
    "description": "The children of this octant.",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "CubicOctant[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "get",
    "name": "max",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#max",
    "access": "public",
    "description": "The upper bounds of this octant.\n\nAttention: Accessing this property creates a new vector!",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#getCenter",
    "access": "public",
    "description": "Computes the center of this octant.",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "A target vector."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "The center."
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#getDimensions",
    "access": "public",
    "description": "Returns the size of this octant as a vector.",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "A target vector."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "The size."
    }
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "split",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#split",
    "access": "public",
    "description": "Splits this octant into eight smaller ones.",
    "lineNumber": 100,
    "params": [],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/core/edges.js",
    "content": "/**\r\n * Describes all possible octant corner connections.\r\n *\r\n * @type {Uint8Array[]}\r\n */\r\n\r\nexport const edges = [\r\n\r\n\t// X-Axis.\r\n\tnew Uint8Array([0, 4]),\r\n\tnew Uint8Array([1, 5]),\r\n\tnew Uint8Array([2, 6]),\r\n\tnew Uint8Array([3, 7]),\r\n\r\n\t// Y-Axis.\r\n\tnew Uint8Array([0, 2]),\r\n\tnew Uint8Array([1, 3]),\r\n\tnew Uint8Array([4, 6]),\r\n\tnew Uint8Array([5, 7]),\r\n\r\n\t// Z-Axis.\r\n\tnew Uint8Array([0, 1]),\r\n\tnew Uint8Array([2, 3]),\r\n\tnew Uint8Array([4, 5]),\r\n\tnew Uint8Array([6, 7])\r\n\r\n];\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/core/edges.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "edges",
    "memberof": "src/core/edges.js",
    "static": true,
    "longname": "src/core/edges.js~edges",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{edges}",
    "description": "Describes all possible octant corner connections.",
    "lineNumber": 7,
    "type": {
      "nullable": null,
      "types": [
        "Uint8Array[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/core/index.js",
    "content": "export { edges } from \"./edges.js\";\r\nexport { layout } from \"./layout.js\";\r\n\r\nexport { Node } from \"./Node.js\";\r\nexport { Tree } from \"./Tree.js\";\r\n\r\nexport { CubicOctant } from \"./CubicOctant.js\";\r\nexport { Octant } from \"./Octant.js\";\r\nexport { Octree } from \"./Octree.js\";\r\nexport { OctreeIterator } from \"./OctreeIterator.js\";\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/core/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/core/layout.js",
    "content": "/**\r\n * A binary pattern that describes the standard octant layout:\r\n *\r\n * ```text\r\n *    3____7\r\n *  2/___6/|\r\n *  | 1__|_5\r\n *  0/___4/\r\n * ```\r\n *\r\n * This common layout is crucial for positional assumptions.\r\n *\r\n * @type {Uint8Array[]}\r\n */\r\n\r\nexport const layout = [\r\n\r\n\tnew Uint8Array([0, 0, 0]),\r\n\tnew Uint8Array([0, 0, 1]),\r\n\tnew Uint8Array([0, 1, 0]),\r\n\tnew Uint8Array([0, 1, 1]),\r\n\r\n\tnew Uint8Array([1, 0, 0]),\r\n\tnew Uint8Array([1, 0, 1]),\r\n\tnew Uint8Array([1, 1, 0]),\r\n\tnew Uint8Array([1, 1, 1])\r\n\r\n];\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/core/layout.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "layout",
    "memberof": "src/core/layout.js",
    "static": true,
    "longname": "src/core/layout.js~layout",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{layout}",
    "description": "A binary pattern that describes the standard octant layout:\n\n```text\n   3____7\n 2/___6/|\n | 1__|_5\n 0/___4/\n```\n\nThis common layout is crucial for positional assumptions.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Uint8Array[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/core/Node.js",
    "content": "/**\r\n * The Node contract.\r\n *\r\n * Implemented by objects that represent a node in a tree structure.\r\n *\r\n * @interface\r\n */\r\n\r\nexport class Node {\r\n\r\n\t/**\r\n\t * The lower bounds of this node.\r\n\t *\r\n\t * @type {Vector3}\r\n\t */\r\n\r\n\tget min() { return null; }\r\n\r\n\t/**\r\n\t * The upper bounds of the node.\r\n\t *\r\n\t * @type {Vector3}\r\n\t */\r\n\r\n\tget max() { return null; }\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/core/Node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "class",
    "name": "Node",
    "memberof": "src/core/Node.js",
    "static": true,
    "longname": "src/core/Node.js~Node",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{Node}",
    "description": "The Node contract.\n\nImplemented by objects that represent a node in a tree structure.",
    "lineNumber": 9,
    "interface": true
  },
  {
    "__docId__": 66,
    "kind": "get",
    "name": "min",
    "memberof": "src/core/Node.js~Node",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Node.js~Node#min",
    "access": "public",
    "description": "The lower bounds of this node.",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "get",
    "name": "max",
    "memberof": "src/core/Node.js~Node",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Node.js~Node#max",
    "access": "public",
    "description": "The upper bounds of the node.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/core/Octant.js",
    "content": "import { Vector3 } from \"math-ds\";\r\nimport { layout } from \"./layout.js\";\r\n\r\n/**\r\n * A vector.\r\n *\r\n * @type {Vector3}\r\n * @private\r\n */\r\n\r\nconst c = new Vector3();\r\n\r\n/**\r\n * An octant.\r\n *\r\n * @implements {Node}\r\n */\r\n\r\nexport class Octant {\r\n\r\n\t/**\r\n\t * Constructs a new octant.\r\n\t *\r\n\t * @param {Vector3} [min] - The lower bounds.\r\n\t * @param {Vector3} [max] - The upper bounds.\r\n\t */\r\n\r\n\tconstructor(min = new Vector3(), max = new Vector3()) {\r\n\r\n\t\t/**\r\n\t\t * The lower bounds of this octant.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\r\n\t\tthis.min = min;\r\n\r\n\t\t/**\r\n\t\t * The upper bounds of the octant.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\r\n\t\tthis.max = max;\r\n\r\n\t\t/**\r\n\t\t * The children of this octant.\r\n\t\t *\r\n\t\t * @type {Octant[]}\r\n\t\t */\r\n\r\n\t\tthis.children = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the center of this octant.\r\n\t *\r\n\t * @param {Vector3} target - A target vector.\r\n\t * @return {Vector3} The center.\r\n\t */\r\n\r\n\tgetCenter(target) {\r\n\r\n\t\treturn target.addVectors(this.min, this.max).multiplyScalar(0.5);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the size of this octant.\r\n\t *\r\n\t * @param {Vector3} target - A target vector.\r\n\t * @return {Vector3} The size.\r\n\t */\r\n\r\n\tgetDimensions(target) {\r\n\r\n\t\treturn target.subVectors(this.max, this.min);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Splits this octant into eight smaller ones.\r\n\t */\r\n\r\n\tsplit() {\r\n\r\n\t\tconst min = this.min;\r\n\t\tconst max = this.max;\r\n\t\tconst mid = this.getCenter(c);\r\n\r\n\t\tconst children = this.children = [\r\n\t\t\tnull, null, null, null,\r\n\t\t\tnull, null, null, null\r\n\t\t];\r\n\r\n\t\tlet i, combination;\r\n\r\n\t\tfor(i = 0; i < 8; ++i) {\r\n\r\n\t\t\tcombination = layout[i];\r\n\r\n\t\t\tchildren[i] = new this.constructor(\r\n\r\n\t\t\t\tnew Vector3(\r\n\t\t\t\t\t(combination[0] === 0) ? min.x : mid.x,\r\n\t\t\t\t\t(combination[1] === 0) ? min.y : mid.y,\r\n\t\t\t\t\t(combination[2] === 0) ? min.z : mid.z\r\n\t\t\t\t),\r\n\r\n\t\t\t\tnew Vector3(\r\n\t\t\t\t\t(combination[0] === 0) ? mid.x : max.x,\r\n\t\t\t\t\t(combination[1] === 0) ? mid.y : max.y,\r\n\t\t\t\t\t(combination[2] === 0) ? mid.z : max.z\r\n\t\t\t\t)\r\n\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/core/Octant.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "c",
    "memberof": "src/core/Octant.js",
    "static": true,
    "longname": "src/core/Octant.js~c",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "A vector.",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "class",
    "name": "Octant",
    "memberof": "src/core/Octant.js",
    "static": true,
    "longname": "src/core/Octant.js~Octant",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{Octant}",
    "description": "An octant.",
    "lineNumber": 19,
    "interface": false,
    "implements": [
      "Node"
    ]
  },
  {
    "__docId__": 71,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Octant.js~Octant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octant.js~Octant#constructor",
    "access": "public",
    "description": "Constructs a new octant.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "min",
        "description": "The lower bounds."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "max",
        "description": "The upper bounds."
      }
    ]
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "min",
    "memberof": "src/core/Octant.js~Octant",
    "static": false,
    "longname": "src/core/Octant.js~Octant#min",
    "access": "public",
    "description": "The lower bounds of this octant.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "max",
    "memberof": "src/core/Octant.js~Octant",
    "static": false,
    "longname": "src/core/Octant.js~Octant#max",
    "access": "public",
    "description": "The upper bounds of the octant.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "children",
    "memberof": "src/core/Octant.js~Octant",
    "static": false,
    "longname": "src/core/Octant.js~Octant#children",
    "access": "public",
    "description": "The children of this octant.",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "Octant[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/core/Octant.js~Octant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octant.js~Octant#getCenter",
    "access": "public",
    "description": "Computes the center of this octant.",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "A target vector."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "The center."
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "src/core/Octant.js~Octant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octant.js~Octant#getDimensions",
    "access": "public",
    "description": "Computes the size of this octant.",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "A target vector."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "The size."
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "split",
    "memberof": "src/core/Octant.js~Octant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octant.js~Octant#split",
    "access": "public",
    "description": "Splits this octant into eight smaller ones.",
    "lineNumber": 86,
    "params": [],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "src/core/Octree.js",
    "content": "import { Box3 } from \"math-ds\";\r\nimport { OctreeRaycaster } from \"../raycasting\";\r\nimport { OctreeIterator } from \"./OctreeIterator.js\";\r\n\r\n/**\r\n * A 3D box.\r\n *\r\n * @type {Box3}\r\n * @private\r\n */\r\n\r\nconst b = new Box3();\r\n\r\n/**\r\n * Recursively calculates the depth of the given octree.\r\n *\r\n * @private\r\n * @param {Node} octant - An octant.\r\n * @return {Number} The depth.\r\n */\r\n\r\nfunction getDepth(octant) {\r\n\r\n\tconst children = octant.children;\r\n\r\n\tlet result = 0;\r\n\tlet i, l, d;\r\n\r\n\tif(children !== null) {\r\n\r\n\t\tfor(i = 0, l = children.length; i < l; ++i) {\r\n\r\n\t\t\td = 1 + getDepth(children[i]);\r\n\r\n\t\t\tif(d > result) {\r\n\r\n\t\t\t\tresult = d;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n/**\r\n * Recursively collects octants that lie inside the specified region.\r\n *\r\n * @private\r\n * @param {Node} octant - An octant.\r\n * @param {Frustum|Box3} region - A region.\r\n * @param {Node[]} result - A list to be filled with octants that intersect with the region.\r\n */\r\n\r\nfunction cull(octant, region, result) {\r\n\r\n\tconst children = octant.children;\r\n\r\n\tlet i, l;\r\n\r\n\tb.min = octant.min;\r\n\tb.max = octant.max;\r\n\r\n\tif(region.intersectsBox(b)) {\r\n\r\n\t\tif(children !== null) {\r\n\r\n\t\t\tfor(i = 0, l = children.length; i < l; ++i) {\r\n\r\n\t\t\t\tcull(children[i], region, result);\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tresult.push(octant);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Recursively fetches all octants with the specified depth level.\r\n *\r\n * @private\r\n * @param {Node} octant - An octant.\r\n * @param {Number} level - The target depth level.\r\n * @param {Number} depth - The current depth level.\r\n * @param {Node[]} result - A list to be filled with the identified octants.\r\n */\r\n\r\nfunction findNodesByLevel(octant, level, depth, result) {\r\n\r\n\tconst children = octant.children;\r\n\r\n\tlet i, l;\r\n\r\n\tif(depth === level) {\r\n\r\n\t\tresult.push(octant);\r\n\r\n\t} else if(children !== null) {\r\n\r\n\t\t++depth;\r\n\r\n\t\tfor(i = 0, l = children.length; i < l; ++i) {\r\n\r\n\t\t\tfindNodesByLevel(children[i], level, depth, result);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A pointer-based octree that subdivides space for fast spatial searches.\r\n *\r\n * @implements {Iterable}\r\n * @implements {Node}\r\n * @implements {Tree}\r\n */\r\n\r\nexport class Octree {\r\n\r\n\t/**\r\n\t * Constructs a new octree.\r\n\t *\r\n\t * @param {Node} root - The root node. See {@link Octant} or {@link CubicOctant}.\r\n\t */\r\n\r\n\tconstructor(root) {\r\n\r\n\t\t/**\r\n\t\t * The root octant.\r\n\t\t *\r\n\t\t * @type {Node}\r\n\t\t * @protected\r\n\t\t */\r\n\r\n\t\tthis.root = root;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The lower bounds of the root octant.\r\n\t *\r\n\t * @type {Vector3}\r\n\t */\r\n\r\n\tget min() {\r\n\r\n\t\treturn this.root.min;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The upper bounds of the root octant.\r\n\t *\r\n\t * @type {Vector3}\r\n\t */\r\n\r\n\tget max() {\r\n\r\n\t\treturn this.root.max;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The children of the root node.\r\n\t *\r\n\t * @type {Node[]}\r\n\t */\r\n\r\n\tget children() {\r\n\r\n\t\treturn this.root.children;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the center of this octree.\r\n\t *\r\n\t * @param {Vector3} target - A target vector.\r\n\t * @return {Vector3} A vector that describes the center of this octree.\r\n\t */\r\n\r\n\tgetCenter(target) {\r\n\r\n\t\treturn this.root.getCenter(target);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the size of this octree.\r\n\t *\r\n\t * @param {Vector3} target - A target vector.\r\n\t * @return {Vector3} A vector that describes the size of this octree.\r\n\t */\r\n\r\n\tgetDimensions(target) {\r\n\r\n\t\treturn this.root.getDimensions(target);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively collects nodes that intersect with the specified region.\r\n\t *\r\n\t * @param {Frustum|Box3} region - A region.\r\n\t * @return {Node[]} The nodes.\r\n\t */\r\n\r\n\tcull(region) {\r\n\r\n\t\tconst result = [];\r\n\r\n\t\tcull(this.root, region, result);\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the current depth of this octree.\r\n\t *\r\n\t * @return {Number} The depth.\r\n\t */\r\n\r\n\tgetDepth() {\r\n\r\n\t\treturn getDepth(this.root);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fetches all nodes of a specific depth level.\r\n\t *\r\n\t * @param {Number} level - The depth level.\r\n\t * @return {Node[]} The nodes.\r\n\t */\r\n\r\n\tfindNodesByLevel(level) {\r\n\r\n\t\tconst result = [];\r\n\r\n\t\tfindNodesByLevel(this.root, level, 0, result);\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the nodes that intersect with the given ray. The intersecting\r\n\t * nodes are sorted by distance, closest first.\r\n\t *\r\n\t * @param {Raycaster} raycaster - A raycaster.\r\n\t * @param {Node[]} [intersects] - An optional target list to be filled with the intersecting nodes.\r\n\t * @return {Node[]} The intersecting nodes.\r\n\t */\r\n\r\n\traycast(raycaster, intersects = []) {\r\n\r\n\t\tOctreeRaycaster.intersectOctree(this, raycaster.ray, intersects);\r\n\r\n\t\treturn intersects;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that traverses the octree and returns leaf nodes.\r\n\t *\r\n\t * When a cull region is provided, the iterator will only return leaves that\r\n\t * intersect with that region.\r\n\t *\r\n\t * @param {Frustum|Box3} [region] - A cull region.\r\n\t * @return {Iterator} An iterator.\r\n\t */\r\n\r\n\tleaves(region) {\r\n\r\n\t\treturn new OctreeIterator(this, region);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that traverses the octree and returns all leaf nodes.\r\n\t *\r\n\t * @return {Iterator} An iterator.\r\n\t */\r\n\r\n\t[Symbol.iterator]() {\r\n\r\n\t\treturn new OctreeIterator(this);\r\n\r\n\t}\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/core/Octree.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "b",
    "memberof": "src/core/Octree.js",
    "static": true,
    "longname": "src/core/Octree.js~b",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "A 3D box.",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "getDepth",
    "memberof": "src/core/Octree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Octree.js~getDepth",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "Recursively calculates the depth of the given octree.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The depth."
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "cull",
    "memberof": "src/core/Octree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Octree.js~cull",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "Recursively collects octants that lie inside the specified region.",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      },
      {
        "nullable": null,
        "types": [
          "Frustum",
          "Box3"
        ],
        "spread": false,
        "optional": false,
        "name": "region",
        "description": "A region."
      },
      {
        "nullable": null,
        "types": [
          "Node[]"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "A list to be filled with octants that intersect with the region."
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "findNodesByLevel",
    "memberof": "src/core/Octree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Octree.js~findNodesByLevel",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "Recursively fetches all octants with the specified depth level.",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "The target depth level."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "depth",
        "description": "The current depth level."
      },
      {
        "nullable": null,
        "types": [
          "Node[]"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "A list to be filled with the identified octants."
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 83,
    "kind": "class",
    "name": "Octree",
    "memberof": "src/core/Octree.js",
    "static": true,
    "longname": "src/core/Octree.js~Octree",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{Octree}",
    "description": "A pointer-based octree that subdivides space for fast spatial searches.",
    "lineNumber": 129,
    "interface": false,
    "implements": [
      "Iterable",
      "Node",
      "Tree"
    ]
  },
  {
    "__docId__": 84,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#constructor",
    "access": "public",
    "description": "Constructs a new octree.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": "The root node. See {@link Octant} or {@link CubicOctant}."
      }
    ]
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "root",
    "memberof": "src/core/Octree.js~Octree",
    "static": false,
    "longname": "src/core/Octree.js~Octree#root",
    "access": "protected",
    "description": "The root octant.",
    "lineNumber": 146,
    "type": {
      "nullable": null,
      "types": [
        "Node"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "get",
    "name": "min",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#min",
    "access": "public",
    "description": "The lower bounds of the root octant.",
    "lineNumber": 156,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "get",
    "name": "max",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#max",
    "access": "public",
    "description": "The upper bounds of the root octant.",
    "lineNumber": 168,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "get",
    "name": "children",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#children",
    "access": "public",
    "description": "The children of the root node.",
    "lineNumber": 180,
    "type": {
      "nullable": null,
      "types": [
        "Node[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#getCenter",
    "access": "public",
    "description": "Calculates the center of this octree.",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "A target vector."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "A vector that describes the center of this octree."
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#getDimensions",
    "access": "public",
    "description": "Calculates the size of this octree.",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "A target vector."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "A vector that describes the size of this octree."
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "cull",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#cull",
    "access": "public",
    "description": "Recursively collects nodes that intersect with the specified region.",
    "lineNumber": 219,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frustum",
          "Box3"
        ],
        "spread": false,
        "optional": false,
        "name": "region",
        "description": "A region."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node[]"
      ],
      "spread": false,
      "description": "The nodes."
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "getDepth",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#getDepth",
    "access": "public",
    "description": "Calculates the current depth of this octree.",
    "lineNumber": 235,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The depth."
    },
    "params": []
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "findNodesByLevel",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#findNodesByLevel",
    "access": "public",
    "description": "Fetches all nodes of a specific depth level.",
    "lineNumber": 248,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "The depth level."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node[]"
      ],
      "spread": false,
      "description": "The nodes."
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "raycast",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#raycast",
    "access": "public",
    "description": "Finds the nodes that intersect with the given ray. The intersecting\nnodes are sorted by distance, closest first.",
    "lineNumber": 267,
    "params": [
      {
        "nullable": null,
        "types": [
          "Raycaster"
        ],
        "spread": false,
        "optional": false,
        "name": "raycaster",
        "description": "A raycaster."
      },
      {
        "nullable": null,
        "types": [
          "Node[]"
        ],
        "spread": false,
        "optional": true,
        "name": "intersects",
        "description": "An optional target list to be filled with the intersecting nodes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node[]"
      ],
      "spread": false,
      "description": "The intersecting nodes."
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "leaves",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#leaves",
    "access": "public",
    "description": "Returns an iterator that traverses the octree and returns leaf nodes.\n\nWhen a cull region is provided, the iterator will only return leaves that\nintersect with that region.",
    "lineNumber": 285,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frustum",
          "Box3"
        ],
        "spread": false,
        "optional": true,
        "name": "region",
        "description": "A cull region."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterator"
      ],
      "spread": false,
      "description": "An iterator."
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "[Symbol.iterator]",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#[Symbol.iterator]",
    "access": "public",
    "description": "Returns an iterator that traverses the octree and returns all leaf nodes.",
    "lineNumber": 297,
    "return": {
      "nullable": null,
      "types": [
        "Iterator"
      ],
      "spread": false,
      "description": "An iterator."
    },
    "params": []
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/core/OctreeIterator.js",
    "content": "import { Box3 } from \"math-ds\";\r\nimport IteratorResult from \"iterator-result\";\r\n\r\n/**\r\n * A 3D box.\r\n *\r\n * @type {Box3}\r\n * @private\r\n */\r\n\r\nconst b = new Box3();\r\n\r\n/**\r\n * An octree iterator.\r\n *\r\n * @implements {Iterator}\r\n * @implements {Iterable}\r\n */\r\n\r\nexport class OctreeIterator {\r\n\r\n\t/**\r\n\t * Constructs a new octant iterator.\r\n\t *\r\n\t * @param {Octree} octree - An octree.\r\n\t * @param {Frustum|Box3} [region=null] - A cull region.\r\n\t */\r\n\r\n\tconstructor(octree, region = null) {\r\n\r\n\t\t/**\r\n\t\t * The octree.\r\n\t\t *\r\n\t\t * @type {Octree}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.octree = octree;\r\n\r\n\t\t/**\r\n\t\t * A region used for octree culling.\r\n\t\t *\r\n\t\t * @type {Frustum|Box3}\r\n\t\t */\r\n\r\n\t\tthis.region = region;\r\n\r\n\t\t/**\r\n\t\t * Whether this iterator should respect the cull region.\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\r\n\t\tthis.cull = (region !== null);\r\n\r\n\t\t/**\r\n\t\t * An iterator result.\r\n\t\t *\r\n\t\t * @type {IteratorResult}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.result = new IteratorResult();\r\n\r\n\t\t/**\r\n\t\t * An octant trace.\r\n\t\t *\r\n\t\t * @type {Octant[]}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.trace = null;\r\n\r\n\t\t/**\r\n\t\t * Iteration indices.\r\n\t\t *\r\n\t\t * @type {Number[]}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.indices = null;\r\n\r\n\t\tthis.reset();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets this iterator.\r\n\t *\r\n\t * @return {OctreeIterator} This iterator.\r\n\t */\r\n\r\n\treset() {\r\n\r\n\t\tconst root = this.octree.root;\r\n\r\n\t\tthis.trace = [];\r\n\t\tthis.indices = [];\r\n\r\n\t\tif(root !== null) {\r\n\r\n\t\t\tb.min = root.min;\r\n\t\t\tb.max = root.max;\r\n\r\n\t\t\tif(!this.cull || this.region.intersectsBox(b)) {\r\n\r\n\t\t\t\tthis.trace.push(root);\r\n\t\t\t\tthis.indices.push(0);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.result.reset();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Iterates over the leaf octants.\r\n\t *\r\n\t * @return {IteratorResult} The next leaf octant.\r\n\t */\r\n\r\n\tnext() {\r\n\r\n\t\tconst cull = this.cull;\r\n\t\tconst region = this.region;\r\n\t\tconst indices = this.indices;\r\n\t\tconst trace = this.trace;\r\n\r\n\t\tlet octant = null;\r\n\t\tlet depth = trace.length - 1;\r\n\r\n\t\tlet index, children, child;\r\n\r\n\t\twhile(octant === null && depth >= 0) {\r\n\r\n\t\t\tindex = indices[depth]++;\r\n\t\t\tchildren = trace[depth].children;\r\n\r\n\t\t\tif(index < 8) {\r\n\r\n\t\t\t\tif(children !== null) {\r\n\r\n\t\t\t\t\tchild = children[index];\r\n\r\n\t\t\t\t\tif(cull) {\r\n\r\n\t\t\t\t\t\tb.min = child.min;\r\n\t\t\t\t\t\tb.max = child.max;\r\n\r\n\t\t\t\t\t\tif(!region.intersectsBox(b)) {\r\n\r\n\t\t\t\t\t\t\t// Cull this octant.\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttrace.push(child);\r\n\t\t\t\t\tindices.push(0);\r\n\r\n\t\t\t\t\t++depth;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\toctant = trace.pop();\r\n\t\t\t\t\tindices.pop();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttrace.pop();\r\n\t\t\t\tindices.pop();\r\n\r\n\t\t\t\t--depth;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.result.value = octant;\r\n\t\tthis.result.done = (octant === null);\r\n\r\n\t\treturn this.result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when this iterator will no longer be run to completion.\r\n\t *\r\n\t * @param {Object} value - An interator result value.\r\n\t * @return {IteratorResult} - A premature completion result.\r\n\t */\r\n\r\n\treturn(value) {\r\n\r\n\t\tthis.result.value = value;\r\n\t\tthis.result.done = true;\r\n\r\n\t\treturn this.result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns this iterator.\r\n\t *\r\n\t * @return {Iterator} An iterator.\r\n\t */\r\n\r\n\t[Symbol.iterator]() {\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/core/OctreeIterator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "b",
    "memberof": "src/core/OctreeIterator.js",
    "static": true,
    "longname": "src/core/OctreeIterator.js~b",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "A 3D box.",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "class",
    "name": "OctreeIterator",
    "memberof": "src/core/OctreeIterator.js",
    "static": true,
    "longname": "src/core/OctreeIterator.js~OctreeIterator",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{OctreeIterator}",
    "description": "An octree iterator.",
    "lineNumber": 20,
    "interface": false,
    "implements": [
      "Iterator",
      "Iterable"
    ]
  },
  {
    "__docId__": 100,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/OctreeIterator.js~OctreeIterator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/OctreeIterator.js~OctreeIterator#constructor",
    "access": "public",
    "description": "Constructs a new octant iterator.",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "An octree."
      },
      {
        "nullable": null,
        "types": [
          "Frustum",
          "Box3"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "region",
        "description": "A cull region."
      }
    ]
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "octree",
    "memberof": "src/core/OctreeIterator.js~OctreeIterator",
    "static": false,
    "longname": "src/core/OctreeIterator.js~OctreeIterator#octree",
    "access": "private",
    "description": "The octree.",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "Octree"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "region",
    "memberof": "src/core/OctreeIterator.js~OctreeIterator",
    "static": false,
    "longname": "src/core/OctreeIterator.js~OctreeIterator#region",
    "access": "public",
    "description": "A region used for octree culling.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Frustum",
        "Box3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "cull",
    "memberof": "src/core/OctreeIterator.js~OctreeIterator",
    "static": false,
    "longname": "src/core/OctreeIterator.js~OctreeIterator#cull",
    "access": "public",
    "description": "Whether this iterator should respect the cull region.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "result",
    "memberof": "src/core/OctreeIterator.js~OctreeIterator",
    "static": false,
    "longname": "src/core/OctreeIterator.js~OctreeIterator#result",
    "access": "private",
    "description": "An iterator result.",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "IteratorResult"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "trace",
    "memberof": "src/core/OctreeIterator.js~OctreeIterator",
    "static": false,
    "longname": "src/core/OctreeIterator.js~OctreeIterator#trace",
    "access": "private",
    "description": "An octant trace.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "Octant[]"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "indices",
    "memberof": "src/core/OctreeIterator.js~OctreeIterator",
    "static": false,
    "longname": "src/core/OctreeIterator.js~OctreeIterator#indices",
    "access": "private",
    "description": "Iteration indices.",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "reset",
    "memberof": "src/core/OctreeIterator.js~OctreeIterator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/OctreeIterator.js~OctreeIterator#reset",
    "access": "public",
    "description": "Resets this iterator.",
    "lineNumber": 93,
    "return": {
      "nullable": null,
      "types": [
        "OctreeIterator"
      ],
      "spread": false,
      "description": "This iterator."
    },
    "params": []
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "next",
    "memberof": "src/core/OctreeIterator.js~OctreeIterator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/OctreeIterator.js~OctreeIterator#next",
    "access": "public",
    "description": "Iterates over the leaf octants.",
    "lineNumber": 126,
    "return": {
      "nullable": null,
      "types": [
        "IteratorResult"
      ],
      "spread": false,
      "description": "The next leaf octant."
    },
    "params": []
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "return",
    "memberof": "src/core/OctreeIterator.js~OctreeIterator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/OctreeIterator.js~OctreeIterator#return",
    "access": "public",
    "description": "Called when this iterator will no longer be run to completion.",
    "lineNumber": 200,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "An interator result value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IteratorResult"
      ],
      "spread": false,
      "description": "A premature completion result."
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "[Symbol.iterator]",
    "memberof": "src/core/OctreeIterator.js~OctreeIterator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/OctreeIterator.js~OctreeIterator#[Symbol.iterator]",
    "access": "public",
    "description": "Returns this iterator.",
    "lineNumber": 215,
    "return": {
      "nullable": null,
      "types": [
        "Iterator"
      ],
      "spread": false,
      "description": "An iterator."
    },
    "params": []
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "src/core/Tree.js",
    "content": "/**\r\n * The Tree contract.\r\n *\r\n * Implemented by objects that organize data in a tree structure.\r\n *\r\n * @interface\r\n */\r\n\r\nexport class Tree {\r\n\r\n\t/**\r\n\t * Calculates the depth of this tree.\r\n\t *\r\n\t * @return {Number} The depth.\r\n\t */\r\n\r\n\tgetDepth() {}\r\n\r\n\t/**\r\n\t * Fetches all nodes of a specific depth level.\r\n\t *\r\n\t * @param {Number} level - The depth level.\r\n\t * @return {Node[]} The nodes.\r\n\t */\r\n\r\n\tfindNodesByLevel(level) {}\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/core/Tree.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "class",
    "name": "Tree",
    "memberof": "src/core/Tree.js",
    "static": true,
    "longname": "src/core/Tree.js~Tree",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{Tree}",
    "description": "The Tree contract.\n\nImplemented by objects that organize data in a tree structure.",
    "lineNumber": 9,
    "interface": true
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "getDepth",
    "memberof": "src/core/Tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Tree.js~Tree#getDepth",
    "access": "public",
    "description": "Calculates the depth of this tree.",
    "lineNumber": 17,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The depth."
    },
    "params": []
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "findNodesByLevel",
    "memberof": "src/core/Tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Tree.js~Tree#findNodesByLevel",
    "access": "public",
    "description": "Fetches all nodes of a specific depth level.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "The depth level."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node[]"
      ],
      "spread": false,
      "description": "The nodes."
    }
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "src/index.js",
    "content": "export {\r\n\tCubicOctant,\r\n\tedges,\r\n\tlayout,\r\n\tOctant,\r\n\tOctree,\r\n\tOctreeIterator\r\n} from \"./core\";\r\n\r\nexport {\r\n\tPointOctant,\r\n\tPointOctree\r\n} from \"./points\";\r\n\r\nexport {\r\n\tFlags,\r\n\tfindEntryOctant,\r\n\tfindNextOctant,\r\n\tintersectOctree,\r\n\tOctreeRaycaster,\r\n\tRayPointIntersection,\r\n\ttestPoints\r\n} from \"./raycasting\";\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "src/points/index.js",
    "content": "export { PointOctant } from \"./PointOctant.js\";\r\nexport { PointOctree } from \"./PointOctree.js\";\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/points/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "src/points/PointOctant.js",
    "content": "import { Vector3 } from \"math-ds\";\r\nimport { Octant } from \"../core/Octant.js\";\r\n\r\n/**\r\n * A point.\r\n *\r\n * @type {Vector3}\r\n * @private\r\n */\r\n\r\nconst p = new Vector3();\r\n\r\n/**\r\n * An octant that maintains points.\r\n */\r\n\r\nexport class PointOctant extends Octant {\r\n\r\n\t/**\r\n\t * Constructs a new point octant.\r\n\t *\r\n\t * @param {Vector3} [min] - The lower bounds.\r\n\t * @param {Vector3} [max] - The upper bounds.\r\n\t */\r\n\r\n\tconstructor(min, max) {\r\n\r\n\t\tsuper(min, max);\r\n\r\n\t\t/**\r\n\t\t * The points.\r\n\t\t *\r\n\t\t * @type {Vector3[]}\r\n\t\t */\r\n\r\n\t\tthis.points = null;\r\n\r\n\t\t/**\r\n\t\t * Point data.\r\n\t\t *\r\n\t\t * @type {Array}\r\n\t\t */\r\n\r\n\t\tthis.data = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the distance squared from this octant to the given point.\r\n\t *\r\n\t * @param {Vector3} point - A point.\r\n\t * @return {Number} The distance squared.\r\n\t */\r\n\r\n\tdistanceToSquared(point) {\r\n\r\n\t\tconst clampedPoint = p.copy(point).clamp(this.min, this.max);\r\n\r\n\t\treturn clampedPoint.sub(point).lengthSquared();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the distance squared from the center of this octant to the given\r\n\t * point.\r\n\t *\r\n\t * @param {Vector3} point - A point.\r\n\t * @return {Number} The distance squared.\r\n\t */\r\n\r\n\tdistanceToCenterSquared(point) {\r\n\r\n\t\tconst center = this.getCenter(p);\r\n\r\n\t\tconst dx = point.x - center.x;\r\n\t\tconst dy = point.y - center.x;\r\n\t\tconst dz = point.z - center.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the given point lies inside this octant's boundaries.\r\n\t *\r\n\t * This method can also be used to check if this octant intersects a sphere by\r\n\t * providing a radius as bias.\r\n\t *\r\n\t * @param {Vector3} point - A point.\r\n\t * @param {Number} bias - A padding that extends the boundaries temporarily.\r\n\t * @return {Boolean} Whether the given point lies inside this octant.\r\n\t */\r\n\r\n\tcontains(point, bias) {\r\n\r\n\t\tconst min = this.min;\r\n\t\tconst max = this.max;\r\n\r\n\t\treturn (\r\n\t\t\tpoint.x >= min.x - bias &&\r\n\t\t\tpoint.y >= min.y - bias &&\r\n\t\t\tpoint.z >= min.z - bias &&\r\n\t\t\tpoint.x <= max.x + bias &&\r\n\t\t\tpoint.y <= max.y + bias &&\r\n\t\t\tpoint.z <= max.z + bias\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Redistributes the points of this octant to its children.\r\n\t *\r\n\t * Has no effect if there are no points or if this octant has no children.\r\n\t *\r\n\t * @param {Number} bias - A proximity threshold.\r\n\t */\r\n\r\n\tredistribute(bias) {\r\n\r\n\t\tconst children = this.children;\r\n\t\tconst points = this.points;\r\n\t\tconst data = this.data;\r\n\r\n\t\tlet i, j, il, jl;\r\n\t\tlet child, point, entry;\r\n\r\n\t\tif(children !== null && points !== null) {\r\n\r\n\t\t\tfor(i = 0, il = points.length; i < il; ++i) {\r\n\r\n\t\t\t\tpoint = points[i];\r\n\t\t\t\tentry = data[i];\r\n\r\n\t\t\t\tfor(j = 0, jl = children.length; j < jl; ++j) {\r\n\r\n\t\t\t\t\tchild = children[j];\r\n\r\n\t\t\t\t\tif(child.contains(point, bias)) {\r\n\r\n\t\t\t\t\t\tif(child.points === null) {\r\n\r\n\t\t\t\t\t\t\tchild.points = [];\r\n\t\t\t\t\t\t\tchild.data = [];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tchild.points.push(point);\r\n\t\t\t\t\t\tchild.data.push(entry);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.points = null;\r\n\t\t\tthis.data = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes all child nodes and collects their points.\r\n\t */\r\n\r\n\tmerge() {\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tif(children !== null) {\r\n\r\n\t\t\tlet points = [];\r\n\t\t\tlet data = [];\r\n\r\n\t\t\tlet i, l, child;\r\n\r\n\t\t\tfor(i = 0, l = children.length; i < l; ++i) {\r\n\r\n\t\t\t\tchild = children[i];\r\n\r\n\t\t\t\tif(child.points !== null) {\r\n\r\n\t\t\t\t\tpoints = points.concat(child.points);\r\n\t\t\t\t\tdata = data.concat(child.data);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/** @ignore */\r\n\t\t\tthis.children = null;\r\n\t\t\tthis.points = points;\r\n\t\t\tthis.data = data;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/points/PointOctant.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "name": "p",
    "memberof": "src/points/PointOctant.js",
    "static": true,
    "longname": "src/points/PointOctant.js~p",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "A point.",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "class",
    "name": "PointOctant",
    "memberof": "src/points/PointOctant.js",
    "static": true,
    "longname": "src/points/PointOctant.js~PointOctant",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{PointOctant}",
    "description": "An octant that maintains points.",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/core/Octant.js~Octant"
    ]
  },
  {
    "__docId__": 122,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#constructor",
    "access": "public",
    "description": "Constructs a new point octant.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "min",
        "description": "The lower bounds."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "max",
        "description": "The upper bounds."
      }
    ]
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "points",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#points",
    "access": "public",
    "description": "The points.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Vector3[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "data",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#data",
    "access": "public",
    "description": "Point data.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "distanceToSquared",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#distanceToSquared",
    "access": "public",
    "description": "Calculates the distance squared from this octant to the given point.",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The distance squared."
    }
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "distanceToCenterSquared",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#distanceToCenterSquared",
    "access": "public",
    "description": "Calculates the distance squared from the center of this octant to the given\npoint.",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The distance squared."
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "contains",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#contains",
    "access": "public",
    "description": "Checks if the given point lies inside this octant's boundaries.\n\nThis method can also be used to check if this octant intersects a sphere by\nproviding a radius as bias.",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bias",
        "description": "A padding that extends the boundaries temporarily."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the given point lies inside this octant."
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "redistribute",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#redistribute",
    "access": "public",
    "description": "Redistributes the points of this octant to its children.\n\nHas no effect if there are no points or if this octant has no children.",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bias",
        "description": "A proximity threshold."
      }
    ],
    "return": null
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "merge",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#merge",
    "access": "public",
    "description": "Deletes all child nodes and collects their points.",
    "lineNumber": 169,
    "params": [],
    "return": null
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "children",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#children",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "src/points/PointOctree.js",
    "content": "import { Octree } from \"../core/Octree.js\";\r\nimport { testPoints } from \"../raycasting/points/testPoints.js\";\r\nimport { PointOctant } from \"./PointOctant.js\";\r\n\r\n/**\r\n * Recursively counts how many points are in the given octant.\r\n *\r\n * @private\r\n * @param {Octant} octant - An octant.\r\n * @return {Number} The amount of points.\r\n */\r\n\r\nfunction countPoints(octant) {\r\n\r\n\tconst children = octant.children;\r\n\r\n\tlet result = 0;\r\n\tlet i, l;\r\n\r\n\tif(children !== null) {\r\n\r\n\t\tfor(i = 0, l = children.length; i < l; ++i) {\r\n\r\n\t\t\tresult += countPoints(children[i]);\r\n\r\n\t\t}\r\n\r\n\t} else if(octant.points !== null) {\r\n\r\n\t\tresult = octant.points.length;\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n/**\r\n * Recursively inserts a point into the octree.\r\n *\r\n * @private\r\n * @param {Vector3} point - A point.\r\n * @param {Object} data - An object that the point represents.\r\n * @param {Octree} octree - The octree.\r\n * @param {Octant} octant - The current octant.\r\n * @param {Number} depth - The current depth.\r\n * @return {Boolean} Whether the operation was successful.\r\n */\r\n\r\nfunction insert(point, data, octree, octant, depth) {\r\n\r\n\tlet children = octant.children;\r\n\tlet exists = false;\r\n\tlet done = false;\r\n\tlet i, l;\r\n\r\n\tif(octant.contains(point, octree.bias)) {\r\n\r\n\t\tif(children === null) {\r\n\r\n\t\t\tif(octant.points === null) {\r\n\r\n\t\t\t\toctant.points = [];\r\n\t\t\t\toctant.data = [];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor(i = 0, l = octant.points.length; !exists && i < l; ++i) {\r\n\r\n\t\t\t\t\texists = octant.points[i].equals(point);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(exists) {\r\n\r\n\t\t\t\toctant.data[i - 1] = data;\r\n\t\t\t\tdone = true;\r\n\r\n\t\t\t} else if(octant.points.length < octree.maxPoints || depth === octree.maxDepth) {\r\n\r\n\t\t\t\toctant.points.push(point.clone());\r\n\t\t\t\toctant.data.push(data);\r\n\t\t\t\t++octree.pointCount;\r\n\t\t\t\tdone = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\toctant.split();\r\n\t\t\t\toctant.redistribute(octree.bias);\r\n\t\t\t\tchildren = octant.children;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif(children !== null) {\r\n\r\n\t\t\t++depth;\r\n\r\n\t\t\tfor(i = 0, l = children.length; !done && i < l; ++i) {\r\n\r\n\t\t\t\tdone = insert(point, data, octree, children[i], depth);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn done;\r\n\r\n}\r\n\r\n/**\r\n * Recursively finds a point in the octree and removes it.\r\n *\r\n * @private\r\n * @param {Vector3} point - A point.\r\n * @param {Octree} octree - The octree.\r\n * @param {Octant} octant - The current octant.\r\n * @param {Octant} parent - The parent of the current octant.\r\n * @return {Object} The data entry of the removed point or null if it didn't exist.\r\n */\r\n\r\nfunction remove(point, octree, octant, parent) {\r\n\r\n\tconst children = octant.children;\r\n\r\n\tlet result = null;\r\n\r\n\tlet i, l;\r\n\tlet points, data, last;\r\n\r\n\tif(octant.contains(point, octree.bias)) {\r\n\r\n\t\tif(children !== null) {\r\n\r\n\t\t\tfor(i = 0, l = children.length; result === null && i < l; ++i) {\r\n\r\n\t\t\t\tresult = remove(point, octree, children[i], octant);\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if(octant.points !== null) {\r\n\r\n\t\t\tpoints = octant.points;\r\n\t\t\tdata = octant.data;\r\n\r\n\t\t\tfor(i = 0, l = points.length; i < l; ++i) {\r\n\r\n\t\t\t\tif(points[i].equals(point)) {\r\n\r\n\t\t\t\t\tlast = l - 1;\r\n\t\t\t\t\tresult = data[i];\r\n\r\n\t\t\t\t\t// If the point is NOT the last one in the array:\r\n\t\t\t\t\tif(i < last) {\r\n\r\n\t\t\t\t\t\t// Overwrite with the last point and data entry.\r\n\t\t\t\t\t\tpoints[i] = points[last];\r\n\t\t\t\t\t\tdata[i] = data[last];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Drop the last entry.\r\n\t\t\t\t\tpoints.pop();\r\n\t\t\t\t\tdata.pop();\r\n\r\n\t\t\t\t\t--octree.pointCount;\r\n\r\n\t\t\t\t\tif(parent !== null && countPoints(parent) <= octree.maxPoints) {\r\n\r\n\t\t\t\t\t\tparent.merge();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n/**\r\n * Recursively finds a point in the octree and fetches the associated data.\r\n *\r\n * @private\r\n * @param {Vector3} point - A point.\r\n * @param {Octree} octree - The octree.\r\n * @param {Octant} octant - The current octant octant.\r\n * @return {Object} The data entry that is associated with the given point or null if it doesn't exist.\r\n */\r\n\r\nfunction get(point, octree, octant) {\r\n\r\n\tconst children = octant.children;\r\n\r\n\tlet result = null;\r\n\r\n\tlet i, l;\r\n\tlet points;\r\n\r\n\tif(octant.contains(point, octree.bias)) {\r\n\r\n\t\tif(children !== null) {\r\n\r\n\t\t\tfor(i = 0, l = children.length; result === null && i < l; ++i) {\r\n\r\n\t\t\t\tresult = get(point, octree, children[i]);\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if(octant.points !== null) {\r\n\r\n\t\t\tpoints = octant.points;\r\n\r\n\t\t\tfor(i = 0, l = points.length; result === null && i < l; ++i) {\r\n\r\n\t\t\t\tif(point.equals(points[i])) {\r\n\r\n\t\t\t\t\tresult = octant.data[i];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n/**\r\n * Recursively moves an existing point to a new position.\r\n *\r\n * @private\r\n * @param {Vector3} point - The point.\r\n * @param {Vector3} position - The new position.\r\n * @param {Octree} octree - The octree.\r\n * @param {Octant} octant - The current octant.\r\n * @param {Octant} parent - The parent of the current octant.\r\n * @param {Number} depth - The current depth.\r\n * @return {Object} The data entry of the updated point or null if it didn't exist.\r\n */\r\n\r\nfunction move(point, position, octree, octant, parent, depth) {\r\n\r\n\tconst children = octant.children;\r\n\r\n\tlet result = null;\r\n\r\n\tlet i, l;\r\n\tlet points;\r\n\r\n\tif(octant.contains(point, octree.bias)) {\r\n\r\n\t\tif(octant.contains(position, octree.bias)) {\r\n\r\n\t\t\t// The point and the new position both fall into the current octant.\r\n\t\t\tif(children !== null) {\r\n\r\n\t\t\t\t++depth;\r\n\r\n\t\t\t\tfor(i = 0, l = children.length; result === null && i < l; ++i) {\r\n\r\n\t\t\t\t\tresult = move(point, position, octree, children[i], octant, depth);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if(octant.points !== null) {\r\n\r\n\t\t\t\t// No divergence - the point can be updated in place.\r\n\t\t\t\tpoints = octant.points;\r\n\r\n\t\t\t\tfor(i = 0, l = points.length; i < l; ++i) {\r\n\r\n\t\t\t\t\tif(point.equals(points[i])) {\r\n\r\n\t\t\t\t\t\t// The point exists! Update its position.\r\n\t\t\t\t\t\tpoints[i].copy(position);\r\n\t\t\t\t\t\tresult = octant.data[i];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Retrieve the point and remove it.\r\n\t\t\tresult = remove(point, octree, octant, parent);\r\n\r\n\t\t\t// Go back to the parent octant and add the updated point.\r\n\t\t\tinsert(position, result, octree, parent, depth - 1);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n/**\r\n * Recursively finds the closest point to the given one.\r\n *\r\n * @private\r\n * @param {Vector3} point - The point.\r\n * @param {Number} maxDistance - The maximum distance.\r\n * @param {Boolean} skipSelf - Whether a point that is exactly at the given position should be skipped.\r\n * @param {Octant} octant - The current octant.\r\n * @return {Object} An object representing the nearest point or null if there is none.\r\n * @property {Vector3} point - The nearest point.\r\n * @property {Object} data - The data that belongs to the point.\r\n * @property {Number} distance - The distance to the given point.\r\n */\r\n\r\nfunction findNearestPoint(point, maxDistance, skipSelf, octant) {\r\n\r\n\tlet result = null;\r\n\tlet bestDistance = maxDistance;\r\n\tlet i, l;\r\n\r\n\tif(octant.children !== null) {\r\n\r\n\t\t// Sort the children: smallest distance to the point first, ASC.\r\n\t\tconst sortedChildren = octant.children.map((child) => {\r\n\r\n\t\t\t// Precompute distances.\r\n\t\t\treturn {\r\n\t\t\t\toctant: child,\r\n\t\t\t\tdistance: child.distanceToCenterSquared(point)\r\n\t\t\t};\r\n\r\n\t\t}).sort((a, b) => a.distance - b.distance);\r\n\r\n\t\tlet child, intermediateResult;\r\n\r\n\t\t// Traverse from closest to furthest.\r\n\t\tfor(i = 0, l = sortedChildren.length; i < l; ++i) {\r\n\r\n\t\t\tchild = sortedChildren[i].octant;\r\n\r\n\t\t\tif(child.contains(point, bestDistance)) {\r\n\r\n\t\t\t\tintermediateResult = findNearestPoint(point, bestDistance, skipSelf, child);\r\n\r\n\t\t\t\tif(intermediateResult !== null) {\r\n\r\n\t\t\t\t\tbestDistance = intermediateResult.distance;\r\n\t\t\t\t\tresult = intermediateResult;\r\n\r\n\t\t\t\t\tif(bestDistance === 0.0) {\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else if(octant.points !== null) {\r\n\r\n\t\tconst points = octant.points;\r\n\r\n\t\tlet index = -1;\r\n\t\tlet distance;\r\n\r\n\t\tfor(i = 0, l = points.length; i < l; ++i) {\r\n\r\n\t\t\tif(points[i].equals(point)) {\r\n\r\n\t\t\t\tif(!skipSelf) {\r\n\r\n\t\t\t\t\tbestDistance = 0.0;\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdistance = point.distanceTo(points[i]);\r\n\r\n\t\t\t\tif(distance < bestDistance) {\r\n\r\n\t\t\t\t\tbestDistance = distance;\r\n\t\t\t\t\tindex = i;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif(index >= 0) {\r\n\r\n\t\t\tresult = {\r\n\t\t\t\tpoint: points[index],\r\n\t\t\t\tdata: octant.data[index],\r\n\t\t\t\tdistance: bestDistance\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n/**\r\n * Recursively finds points that are inside the specified radius around a given\r\n * position.\r\n *\r\n * @private\r\n * @param {Vector3} point - A position.\r\n * @param {Number} radius - A radius.\r\n * @param {Boolean} skipSelf - Whether a point that is exactly at the given position should be skipped.\r\n * @param {Octant} octant - The current octant.\r\n * @param {Array<Object>} result - An array to be filled with objects.\r\n * @property {Vector3} point - A point.\r\n * @property {Object} data - The data that belongs to the point.\r\n */\r\n\r\nfunction findPoints(point, radius, skipSelf, octant, result) {\r\n\r\n\tconst children = octant.children;\r\n\r\n\tlet i, l;\r\n\r\n\tif(children !== null) {\r\n\r\n\t\tlet child;\r\n\r\n\t\tfor(i = 0, l = children.length; i < l; ++i) {\r\n\r\n\t\t\tchild = children[i];\r\n\r\n\t\t\tif(child.contains(point, radius)) {\r\n\r\n\t\t\t\tfindPoints(point, radius, skipSelf, child, result);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else if(octant.points !== null) {\r\n\r\n\t\tconst points = octant.points;\r\n\t\tconst rSq = radius * radius;\r\n\r\n\t\tlet p;\r\n\r\n\t\tfor(i = 0, l = points.length; i < l; ++i) {\r\n\r\n\t\t\tp = points[i];\r\n\r\n\t\t\tif(p.equals(point)) {\r\n\r\n\t\t\t\tif(!skipSelf) {\r\n\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\tpoint: p.clone(),\r\n\t\t\t\t\t\tdata: octant.data[i]\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if(p.distanceToSquared(point) <= rSq) {\r\n\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tpoint: p.clone(),\r\n\t\t\t\t\tdata: octant.data[i]\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * An octree that manages points.\r\n */\r\n\r\nexport class PointOctree extends Octree {\r\n\r\n\t/**\r\n\t * Constructs a new point octree.\r\n\t *\r\n\t * @param {Vector3} [min] - The lower bounds of the tree.\r\n\t * @param {Vector3} [max] - The upper bounds of the tree.\r\n\t * @param {Number} [bias=0.0] - An octant boundary bias. The octree is considered \"loose\" with a bias greater than 0.\r\n\t * @param {Number} [maxPoints=8] - Number of distinct points per octant before it splits up.\r\n\t * @param {Number} [maxDepth=8] - The maximum tree depth level, starting at 0.\r\n\t */\r\n\r\n\tconstructor(min, max, bias = 0.0, maxPoints = 8, maxDepth = 8) {\r\n\r\n\t\tsuper(new PointOctant(min, max));\r\n\r\n\t\t/**\r\n\t\t * An octant boundary bias.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.bias = Math.max(0.0, bias);\r\n\r\n\t\t/**\r\n\t\t * The number of points per octant before a split occurs.\r\n\t\t *\r\n\t\t * This value works together with the maximum depth as a secondary limiting\r\n\t\t * factor. Smaller values cause splits to occur earlier which results in a\r\n\t\t * faster and deeper tree growth.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.maxPoints = Math.max(1, Math.round(maxPoints));\r\n\r\n\t\t/**\r\n\t\t * The maximum tree depth level.\r\n\t\t *\r\n\t\t * It's possible to use Infinity, but keep in mind that allowing infinitely\r\n\t\t * small octants can have a severely negative impact on performance.\r\n\t\t * Finding a value that works best for a specific scene is advisable.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.maxDepth = Math.max(0, Math.round(maxDepth));\r\n\r\n\t\t/**\r\n\t\t * The amount of points that are currently in this octree.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\r\n\t\tthis.pointCount = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Counts how many points are in the given octant.\r\n\t *\r\n\t * @param {Octant} octant - An octant.\r\n\t * @return {Number} The amount of points.\r\n\t */\r\n\r\n\tcountPoints(octant) {\r\n\r\n\t\treturn countPoints(octant);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Puts a point into the octree.\r\n\t *\r\n\t * @param {Vector3} point - A point. If it's already in the octree, the data entry will be updated.\r\n\t * @param {Object} data - A data object that belongs to the point.\r\n\t * @return {Boolean} Whether the operation was successful.\r\n\t */\r\n\r\n\tinsert(point, data) {\r\n\r\n\t\treturn insert(point, data, this, this.root, 0);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a point from the tree.\r\n\t *\r\n\t * @param {Vector3} point - A point.\r\n\t * @return {Object} The data entry of the removed point or null if it didn't exist.\r\n\t */\r\n\r\n\tremove(point) {\r\n\r\n\t\treturn remove(point, this, this.root, null);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the data of the specified point.\r\n\t *\r\n\t * @param {Vector3} point - A position.\r\n\t * @return {Object} The data entry that is associated with the given point or null if it doesn't exist.\r\n\t */\r\n\r\n\tget(point) {\r\n\r\n\t\treturn get(point, this, this.root);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves an existing point to a new position. Has no effect if the point\r\n\t * doesn't exist.\r\n\t *\r\n\t * @param {Vector3} point - The point.\r\n\t * @param {Vector3} position - The new position.\r\n\t * @return {Object} The data entry of the updated point or null if it didn't exist.\r\n\t */\r\n\r\n\tmove(point, position) {\r\n\r\n\t\treturn move(point, position, this, this.root, null, 0);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the closest point to the given one.\r\n\t *\r\n\t * @param {Vector3} point - A point.\r\n\t * @param {Number} [maxDistance=Infinity] - An upper limit for the distance between the points.\r\n\t * @param {Boolean} [skipSelf=false] - Whether a point that is exactly at the given position should be skipped.\r\n\t * @return {Object} An object representing the nearest point or null if there is none.\r\n\t * @property {Vector3} point - The nearest point.\r\n\t * @property {Object} data - The data that belongs to the point.\r\n\t * @property {Number} distance - The distance to the given point.\r\n\t */\r\n\r\n\tfindNearestPoint(point, maxDistance = Infinity, skipSelf = false) {\r\n\r\n\t\tconst result = findNearestPoint(point, maxDistance, skipSelf, this.root);\r\n\r\n\t\tif(result !== null) {\r\n\r\n\t\t\tresult.point = result.point.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds points that are in the specified radius around the given position.\r\n\t *\r\n\t * @param {Vector3} point - A position.\r\n\t * @param {Number} radius - A radius.\r\n\t * @param {Boolean} [skipSelf=false] - Whether a point that is exactly at the given position should be skipped.\r\n\t * @return {Array<Object>} An array of objects.\r\n\t * @property {Vector3} point - A point.\r\n\t * @property {Object} data - The data that belongs to the point.\r\n\t */\r\n\r\n\tfindPoints(point, radius, skipSelf = false) {\r\n\r\n\t\tconst result = [];\r\n\r\n\t\tfindPoints(point, radius, skipSelf, this.root, result);\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the points that intersect with the given ray.\r\n\t *\r\n\t * @param {Raycaster} raycaster - The raycaster.\r\n\t * @param {Array} [intersects] - An array to be filled with the intersecting points.\r\n\t * @return {RayPointIntersection[]} The intersecting points.\r\n\t */\r\n\r\n\traycast(raycaster, intersects = []) {\r\n\r\n\t\tconst octants = super.raycast(raycaster);\r\n\r\n\t\tif(octants.length > 0) {\r\n\r\n\t\t\ttestPoints(octants, raycaster, intersects);\r\n\r\n\t\t}\r\n\r\n\t\treturn intersects;\r\n\r\n\t}\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/points/PointOctree.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "function",
    "name": "countPoints",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~countPoints",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "Recursively counts how many points are in the given octant.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The amount of points."
    },
    "ignore": true
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "insert",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~insert",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "Recursively inserts a point into the octree.",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "An object that the point represents."
      },
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "The octree."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "depth",
        "description": "The current depth."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the operation was successful."
    },
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "remove",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~remove",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "Recursively finds a point in the octree and removes it.",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      },
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "The octree."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "The parent of the current octant."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The data entry of the removed point or null if it didn't exist."
    },
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "get",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~get",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "Recursively finds a point in the octree and fetches the associated data.",
    "lineNumber": 203,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      },
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "The octree."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant octant."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The data entry that is associated with the given point or null if it doesn't exist."
    },
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "move",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~move",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "Recursively moves an existing point to a new position.",
    "lineNumber": 257,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The point."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "The new position."
      },
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "The octree."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "The parent of the current octant."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "depth",
        "description": "The current depth."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The data entry of the updated point or null if it didn't exist."
    },
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "findNearestPoint",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~findNearestPoint",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "Recursively finds the closest point to the given one.",
    "lineNumber": 332,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The point."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxDistance",
        "description": "The maximum distance."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "skipSelf",
        "description": "Whether a point that is exactly at the given position should be skipped."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The nearest point."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data that belongs to the point."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "distance",
        "description": "The distance to the given point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "An object representing the nearest point or null if there is none."
    },
    "ignore": true
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "findPoints",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~findPoints",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "Recursively finds points that are inside the specified radius around a given\nposition.",
    "lineNumber": 443,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A position."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "A radius."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "skipSelf",
        "description": "Whether a point that is exactly at the given position should be skipped."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant."
      },
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "An array to be filled with objects."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data that belongs to the point."
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 143,
    "kind": "class",
    "name": "PointOctree",
    "memberof": "src/points/PointOctree.js",
    "static": true,
    "longname": "src/points/PointOctree.js~PointOctree",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{PointOctree}",
    "description": "An octree that manages points.",
    "lineNumber": 506,
    "interface": false,
    "extends": [
      "src/core/Octree.js~Octree"
    ]
  },
  {
    "__docId__": 144,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#constructor",
    "access": "public",
    "description": "Constructs a new point octree.",
    "lineNumber": 518,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "min",
        "description": "The lower bounds of the tree."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "max",
        "description": "The upper bounds of the tree."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0.0",
        "defaultRaw": 0,
        "name": "bias",
        "description": "An octant boundary bias. The octree is considered \"loose\" with a bias greater than 0."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "8",
        "defaultRaw": 8,
        "name": "maxPoints",
        "description": "Number of distinct points per octant before it splits up."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "8",
        "defaultRaw": 8,
        "name": "maxDepth",
        "description": "The maximum tree depth level, starting at 0."
      }
    ]
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "bias",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#bias",
    "access": "private",
    "description": "An octant boundary bias.",
    "lineNumber": 529,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "maxPoints",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#maxPoints",
    "access": "private",
    "description": "The number of points per octant before a split occurs.\n\nThis value works together with the maximum depth as a secondary limiting\nfactor. Smaller values cause splits to occur earlier which results in a\nfaster and deeper tree growth.",
    "lineNumber": 542,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "maxDepth",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#maxDepth",
    "access": "private",
    "description": "The maximum tree depth level.\n\nIt's possible to use Infinity, but keep in mind that allowing infinitely\nsmall octants can have a severely negative impact on performance.\nFinding a value that works best for a specific scene is advisable.",
    "lineNumber": 555,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 148,
    "kind": "member",
    "name": "pointCount",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#pointCount",
    "access": "public",
    "description": "The amount of points that are currently in this octree.",
    "lineNumber": 563,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "countPoints",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#countPoints",
    "access": "public",
    "description": "Counts how many points are in the given octant.",
    "lineNumber": 574,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The amount of points."
    }
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "insert",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#insert",
    "access": "public",
    "description": "Puts a point into the octree.",
    "lineNumber": 588,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point. If it's already in the octree, the data entry will be updated."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "A data object that belongs to the point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the operation was successful."
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "remove",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#remove",
    "access": "public",
    "description": "Removes a point from the tree.",
    "lineNumber": 601,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The data entry of the removed point or null if it didn't exist."
    }
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "get",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#get",
    "access": "public",
    "description": "Retrieves the data of the specified point.",
    "lineNumber": 614,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The data entry that is associated with the given point or null if it doesn't exist."
    }
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "move",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#move",
    "access": "public",
    "description": "Moves an existing point to a new position. Has no effect if the point\ndoesn't exist.",
    "lineNumber": 629,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The point."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "The new position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The data entry of the updated point or null if it didn't exist."
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "findNearestPoint",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#findNearestPoint",
    "access": "public",
    "description": "Finds the closest point to the given one.",
    "lineNumber": 647,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Infinity",
        "defaultRaw": "Infinity",
        "name": "maxDistance",
        "description": "An upper limit for the distance between the points."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "skipSelf",
        "description": "Whether a point that is exactly at the given position should be skipped."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The nearest point."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data that belongs to the point."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "distance",
        "description": "The distance to the given point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "An object representing the nearest point or null if there is none."
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "findPoints",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#findPoints",
    "access": "public",
    "description": "Finds points that are in the specified radius around the given position.",
    "lineNumber": 672,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A position."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "A radius."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "skipSelf",
        "description": "Whether a point that is exactly at the given position should be skipped."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data that belongs to the point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": "An array of objects."
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "raycast",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#raycast",
    "access": "public",
    "description": "Finds the points that intersect with the given ray.",
    "lineNumber": 690,
    "params": [
      {
        "nullable": null,
        "types": [
          "Raycaster"
        ],
        "spread": false,
        "optional": false,
        "name": "raycaster",
        "description": "The raycaster."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "intersects",
        "description": "An array to be filled with the intersecting points."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RayPointIntersection[]"
      ],
      "spread": false,
      "description": "The intersecting points."
    }
  },
  {
    "__docId__": 157,
    "kind": "file",
    "name": "src/raycasting/findEntryOctant.js",
    "content": "/**\r\n * Finds the entry plane of the first octant that a ray travels through.\r\n *\r\n * Determining the first octant requires knowing which of the t0s is the\r\n * largest. The tms of the other axes must also be compared against that\r\n * largest t0.\r\n *\r\n * @param {Number} tx0 - Ray projection parameter.\r\n * @param {Number} ty0 - Ray projection parameter.\r\n * @param {Number} tz0 - Ray projection parameter.\r\n * @param {Number} txm - Ray projection parameter mean.\r\n * @param {Number} tym - Ray projection parameter mean.\r\n * @param {Number} tzm - Ray projection parameter mean.\r\n * @return {Number} The index of the first octant that the ray travels through.\r\n */\r\n\r\nexport function findEntryOctant(tx0, ty0, tz0, txm, tym, tzm) {\r\n\r\n\tlet entry = 0;\r\n\r\n\t// Find the entry plane.\r\n\tif(tx0 > ty0 && tx0 > tz0) {\r\n\r\n\t\t// YZ-plane.\r\n\t\tif(tym < tx0) {\r\n\r\n\t\t\tentry |= 2;\r\n\r\n\t\t}\r\n\r\n\t\tif(tzm < tx0) {\r\n\r\n\t\t\tentry |= 1;\r\n\r\n\t\t}\r\n\r\n\t} else if(ty0 > tz0) {\r\n\r\n\t\t// XZ-plane.\r\n\t\tif(txm < ty0) {\r\n\r\n\t\t\tentry |= 4;\r\n\r\n\t\t}\r\n\r\n\t\tif(tzm < ty0) {\r\n\r\n\t\t\tentry |= 1;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// XY-plane.\r\n\t\tif(txm < tz0) {\r\n\r\n\t\t\tentry |= 4;\r\n\r\n\t\t}\r\n\r\n\t\tif(tym < tz0) {\r\n\r\n\t\t\tentry |= 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn entry;\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/raycasting/findEntryOctant.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 158,
    "kind": "function",
    "name": "findEntryOctant",
    "memberof": "src/raycasting/findEntryOctant.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/raycasting/findEntryOctant.js~findEntryOctant",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{findEntryOctant}",
    "description": "Finds the entry plane of the first octant that a ray travels through.\n\nDetermining the first octant requires knowing which of the t0s is the\nlargest. The tms of the other axes must also be compared against that\nlargest t0.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tx0",
        "description": "Ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ty0",
        "description": "Ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tz0",
        "description": "Ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "txm",
        "description": "Ray projection parameter mean."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tym",
        "description": "Ray projection parameter mean."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tzm",
        "description": "Ray projection parameter mean."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The index of the first octant that the ray travels through."
    }
  },
  {
    "__docId__": 159,
    "kind": "file",
    "name": "src/raycasting/findNextOctant.js",
    "content": "/**\r\n * A lookup-table containing octant ids. Used to determine the exit plane from\r\n * an octant.\r\n *\r\n * @type {Uint8Array[]}\r\n * @private\r\n */\r\n\r\nconst octantTable = [\r\n\r\n\tnew Uint8Array([4, 2, 1]),\r\n\tnew Uint8Array([5, 3, 8]),\r\n\tnew Uint8Array([6, 8, 3]),\r\n\tnew Uint8Array([7, 8, 8]),\r\n\tnew Uint8Array([8, 6, 5]),\r\n\tnew Uint8Array([8, 7, 8]),\r\n\tnew Uint8Array([8, 8, 7]),\r\n\tnew Uint8Array([8, 8, 8])\r\n\r\n];\r\n\r\n/**\r\n * Finds the next octant that intersects with the ray based on the exit plane of\r\n * the current one.\r\n *\r\n * @param {Number} currentOctant - The index of the current octant.\r\n * @param {Number} tx1 - Ray projection parameter.\r\n * @param {Number} ty1 - Ray projection parameter.\r\n * @param {Number} tz1 - Ray projection parameter.\r\n * @return {Number} The index of the next octant that the ray travels through.\r\n */\r\n\r\nexport function findNextOctant(currentOctant, tx1, ty1, tz1) {\r\n\r\n\tlet min;\r\n\tlet exit = 0;\r\n\r\n\t// Find the exit plane.\r\n\tif(tx1 < ty1) {\r\n\r\n\t\tmin = tx1;\r\n\t\texit = 0; // YZ-plane.\r\n\r\n\t} else {\r\n\r\n\t\tmin = ty1;\r\n\t\texit = 1; // XZ-plane.\r\n\r\n\t}\r\n\r\n\tif(tz1 < min) {\r\n\r\n\t\texit = 2; // XY-plane.\r\n\r\n\t}\r\n\r\n\treturn octantTable[currentOctant][exit];\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/raycasting/findNextOctant.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 160,
    "kind": "variable",
    "name": "octantTable",
    "memberof": "src/raycasting/findNextOctant.js",
    "static": true,
    "longname": "src/raycasting/findNextOctant.js~octantTable",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "A lookup-table containing octant ids. Used to determine the exit plane from\nan octant.",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "Uint8Array[]"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "findNextOctant",
    "memberof": "src/raycasting/findNextOctant.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/raycasting/findNextOctant.js~findNextOctant",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{findNextOctant}",
    "description": "Finds the next octant that intersects with the ray based on the exit plane of\nthe current one.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "currentOctant",
        "description": "The index of the current octant."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tx1",
        "description": "Ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ty1",
        "description": "Ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tz1",
        "description": "Ray projection parameter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The index of the next octant that the ray travels through."
    }
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "src/raycasting/Flags.js",
    "content": "/**\r\n * A container for raycasting flags.\r\n */\r\n\r\nexport class Flags {\r\n\r\n\t/**\r\n\t * Creates a new container for raycasting flags.\r\n\t */\r\n\r\n\tconstructor() {\r\n\r\n\t\t/**\r\n\t\t * The current flags.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\r\n\t\tthis.value = 0;\r\n\r\n\t}\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/raycasting/Flags.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "class",
    "name": "Flags",
    "memberof": "src/raycasting/Flags.js",
    "static": true,
    "longname": "src/raycasting/Flags.js~Flags",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{Flags}",
    "description": "A container for raycasting flags.",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 164,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/raycasting/Flags.js~Flags",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/raycasting/Flags.js~Flags#constructor",
    "access": "public",
    "description": "Creates a new container for raycasting flags.",
    "lineNumber": 11
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "value",
    "memberof": "src/raycasting/Flags.js~Flags",
    "static": false,
    "longname": "src/raycasting/Flags.js~Flags#value",
    "access": "public",
    "description": "The current flags.",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "src/raycasting/index.js",
    "content": "export {\r\n\tRayPointIntersection,\r\n\ttestPoints\r\n} from \"./points\";\r\n\r\nexport { Flags } from \"./Flags.js\";\r\nexport { findEntryOctant } from \"./findEntryOctant.js\";\r\nexport { findNextOctant } from \"./findNextOctant.js\";\r\nexport { intersectOctree } from \"./intersectOctree.js\";\r\nexport { OctreeRaycaster } from \"./OctreeRaycaster.js\";\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/raycasting/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "file",
    "name": "src/raycasting/intersectOctree.js",
    "content": "import { Box3, Ray, Vector3 } from \"math-ds\";\r\n\r\n/**\r\n * A vector.\r\n *\r\n * @type {Vector3}\r\n * @private\r\n */\r\n\r\nconst v = new Vector3();\r\n\r\n/**\r\n * A box.\r\n *\r\n * @type {Box3}\r\n * @private\r\n */\r\n\r\nconst b = new Box3();\r\n\r\n/**\r\n * A box.\r\n *\r\n * @type {Box3}\r\n * @private\r\n */\r\n\r\nconst d = new Box3();\r\n\r\n/**\r\n * A ray.\r\n *\r\n * @type {Ray}\r\n * @private\r\n */\r\n\r\nconst r = new Ray();\r\n\r\n/**\r\n * Calculates ray projection parameters for the given octree and ray setup.\r\n *\r\n * @param {Octree} octree - The octree.\r\n * @param {Ray} ray - A ray.\r\n * @param {Flags} flags - Raycasting flags.\r\n * @return {Number[]} The ray parameters tx0, ty0, tz0, tx1, ty1 and tz1, in that order, or null if the ray doesn't hit the octree.\r\n */\r\n\r\nexport function intersectOctree(octree, ray, flags) {\r\n\r\n\t// Translate the octant extents to the scene origin.\r\n\tconst min = b.min.set(0, 0, 0);\r\n\tconst max = b.max.subVectors(octree.max, octree.min);\r\n\r\n\tconst dimensions = octree.getDimensions(d.min);\r\n\tconst halfDimensions = d.max.copy(dimensions).multiplyScalar(0.5);\r\n\r\n\tconst origin = r.origin.copy(ray.origin);\r\n\tconst direction = r.direction.copy(ray.direction);\r\n\r\n\tlet invDirX, invDirY, invDirZ;\r\n\tlet tx0, tx1, ty0, ty1, tz0, tz1;\r\n\r\n\t// Translate the ray to the center of the octant.\r\n\torigin.sub(octree.getCenter(v)).add(halfDimensions);\r\n\r\n\t// Reset all flags.\r\n\tflags.value = 0;\r\n\r\n\t// Handle rays with negative directions.\r\n\tif(direction.x < 0.0) {\r\n\r\n\t\torigin.x = dimensions.x - origin.x;\r\n\t\tdirection.x = -direction.x;\r\n\t\tflags.value |= 4;\r\n\r\n\t}\r\n\r\n\tif(direction.y < 0.0) {\r\n\r\n\t\torigin.y = dimensions.y - origin.y;\r\n\t\tdirection.y = -direction.y;\r\n\t\tflags.value |= 2;\r\n\r\n\t}\r\n\r\n\tif(direction.z < 0.0) {\r\n\r\n\t\torigin.z = dimensions.z - origin.z;\r\n\t\tdirection.z = -direction.z;\r\n\t\tflags.value |= 1;\r\n\r\n\t}\r\n\r\n\t// Improve IEEE double stability.\r\n\tinvDirX = 1.0 / direction.x;\r\n\tinvDirY = 1.0 / direction.y;\r\n\tinvDirZ = 1.0 / direction.z;\r\n\r\n\t// Project the ray to the octant's boundaries.\r\n\ttx0 = (min.x - origin.x) * invDirX;\r\n\ttx1 = (max.x - origin.x) * invDirX;\r\n\tty0 = (min.y - origin.y) * invDirY;\r\n\tty1 = (max.y - origin.y) * invDirY;\r\n\ttz0 = (min.z - origin.z) * invDirZ;\r\n\ttz1 = (max.z - origin.z) * invDirZ;\r\n\r\n\t// Check if the ray hits the octree.\r\n\treturn (Math.max(Math.max(tx0, ty0), tz0) < Math.min(Math.min(tx1, ty1), tz1)) ?\r\n\t\t[tx0, ty0, tz0, tx1, ty1, tz1] : null;\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/raycasting/intersectOctree.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 168,
    "kind": "variable",
    "name": "v",
    "memberof": "src/raycasting/intersectOctree.js",
    "static": true,
    "longname": "src/raycasting/intersectOctree.js~v",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "A vector.",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "variable",
    "name": "b",
    "memberof": "src/raycasting/intersectOctree.js",
    "static": true,
    "longname": "src/raycasting/intersectOctree.js~b",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "A box.",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "variable",
    "name": "d",
    "memberof": "src/raycasting/intersectOctree.js",
    "static": true,
    "longname": "src/raycasting/intersectOctree.js~d",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "A box.",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "variable",
    "name": "r",
    "memberof": "src/raycasting/intersectOctree.js",
    "static": true,
    "longname": "src/raycasting/intersectOctree.js~r",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "A ray.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Ray"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "intersectOctree",
    "memberof": "src/raycasting/intersectOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/raycasting/intersectOctree.js~intersectOctree",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{intersectOctree}",
    "description": "Calculates ray projection parameters for the given octree and ray setup.",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "The octree."
      },
      {
        "nullable": null,
        "types": [
          "Ray"
        ],
        "spread": false,
        "optional": false,
        "name": "ray",
        "description": "A ray."
      },
      {
        "nullable": null,
        "types": [
          "Flags"
        ],
        "spread": false,
        "optional": false,
        "name": "flags",
        "description": "Raycasting flags."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": "The ray parameters tx0, ty0, tz0, tx1, ty1 and tz1, in that order, or null if the ray doesn't hit the octree."
    }
  },
  {
    "__docId__": 173,
    "kind": "file",
    "name": "src/raycasting/OctreeRaycaster.js",
    "content": "import { Flags } from \"./Flags.js\";\r\nimport { findEntryOctant } from \"./findEntryOctant.js\";\r\nimport { findNextOctant } from \"./findNextOctant.js\";\r\nimport { intersectOctree } from \"./intersectOctree.js\";\r\n\r\n/**\r\n * Raycasting flags.\r\n *\r\n * @type {Flags}\r\n */\r\n\r\nconst flags = new Flags();\r\n\r\n/**\r\n * Finds all octants that intersect with the given ray.\r\n *\r\n * @private\r\n * @param {Octant} octant - The current octant.\r\n * @param {Number} tx0 - A ray projection parameter.\r\n * @param {Number} ty0 - A ray projection parameter.\r\n * @param {Number} tz0 - A ray projection parameter.\r\n * @param {Number} tx1 - A ray projection parameter.\r\n * @param {Number} ty1 - A ray projection parameter.\r\n * @param {Number} tz1 - A ray projection parameter.\r\n * @param {Array} intersects - An array to be filled with the intersecting octants.\r\n */\r\n\r\nfunction raycastOctant(octant, tx0, ty0, tz0, tx1, ty1, tz1, intersects) {\r\n\r\n\tif(tx1 >= 0.0 && ty1 >= 0.0 && tz1 >= 0.0) {\r\n\r\n\t\tconst children = octant.children;\r\n\r\n\t\tif(children === null) {\r\n\r\n\t\t\t// Leaf.\r\n\t\t\tintersects.push(octant);\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Compute means.\r\n\t\t\tconst txm = 0.5 * (tx0 + tx1);\r\n\t\t\tconst tym = 0.5 * (ty0 + ty1);\r\n\t\t\tconst tzm = 0.5 * (tz0 + tz1);\r\n\r\n\t\t\tconst f = flags.value;\r\n\t\t\tlet currentOctant = findEntryOctant(tx0, ty0, tz0, txm, tym, tzm);\r\n\r\n\t\t\t/* The possibilities for the next node are passed in the same respective\r\n\t\t\torder as the t-values. Hence, if the first value is found to be the\r\n\t\t\tgreatest, the fourth one will be returned. If the second value is the\r\n\t\t\tgreatest, the fifth one will be returned, etc. */\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tswitch(currentOctant) {\r\n\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\traycastOctant(children[f], tx0, ty0, tz0, txm, tym, tzm, intersects);\r\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, txm, tym, tzm);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\traycastOctant(children[f ^ 1], tx0, ty0, tzm, txm, tym, tz1, intersects);\r\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, txm, tym, tz1);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\traycastOctant(children[f ^ 2], tx0, tym, tz0, txm, ty1, tzm, intersects);\r\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, txm, ty1, tzm);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\traycastOctant(children[f ^ 3], tx0, tym, tzm, txm, ty1, tz1, intersects);\r\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, txm, ty1, tz1);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\traycastOctant(children[f ^ 4], txm, ty0, tz0, tx1, tym, tzm, intersects);\r\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, tx1, tym, tzm);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\traycastOctant(children[f ^ 5], txm, ty0, tzm, tx1, tym, tz1, intersects);\r\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, tx1, tym, tz1);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\traycastOctant(children[f ^ 6], txm, tym, tz0, tx1, ty1, tzm, intersects);\r\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, tx1, ty1, tzm);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\traycastOctant(children[f ^ 7], txm, tym, tzm, tx1, ty1, tz1, intersects);\r\n\t\t\t\t\t\t// Far top right octant. No other octants can be reached from here.\r\n\t\t\t\t\t\tcurrentOctant = 8;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} while(currentOctant < 8);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A raycaster for pointer-based octrees.\r\n *\r\n * Reference:\r\n *  \"An Efficient Parametric Algorithm for Octree Traversal\"\r\n *  by J. Revelles et al. (2000)\r\n */\r\n\r\nexport class OctreeRaycaster {\r\n\r\n\t/**\r\n\t * Finds (pseudo) leaf octants that intersect with the given ray.\r\n\t *\r\n\t * @param {Octree} octree - An octree.\r\n\t * @param {Ray} ray - A ray.\r\n\t * @param {Octant[]} [intersects] - An optional target list to be filled with the intersecting octants.\r\n\t * @return {Octant[]} The intersecting octants. Sorted by distance, closest first.\r\n\t */\r\n\r\n\tstatic intersectOctree(octree, ray, intersects = []) {\r\n\r\n\t\tconst parameters = intersectOctree(octree, ray, flags);\r\n\r\n\t\tif(parameters !== null) {\r\n\r\n\t\t\traycastOctant(octree.root, ...parameters, intersects);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/raycasting/OctreeRaycaster.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "variable",
    "name": "flags",
    "memberof": "src/raycasting/OctreeRaycaster.js",
    "static": true,
    "longname": "src/raycasting/OctreeRaycaster.js~flags",
    "access": "public",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "Raycasting flags.",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "Flags"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "raycastOctant",
    "memberof": "src/raycasting/OctreeRaycaster.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/raycasting/OctreeRaycaster.js~raycastOctant",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree",
    "importStyle": null,
    "description": "Finds all octants that intersect with the given ray.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tx0",
        "description": "A ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ty0",
        "description": "A ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tz0",
        "description": "A ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tx1",
        "description": "A ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ty1",
        "description": "A ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tz1",
        "description": "A ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "intersects",
        "description": "An array to be filled with the intersecting octants."
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 176,
    "kind": "class",
    "name": "OctreeRaycaster",
    "memberof": "src/raycasting/OctreeRaycaster.js",
    "static": true,
    "longname": "src/raycasting/OctreeRaycaster.js~OctreeRaycaster",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{OctreeRaycaster}",
    "description": "A raycaster for pointer-based octrees.\n\nReference:\n \"An Efficient Parametric Algorithm for Octree Traversal\"\n by J. Revelles et al. (2000)",
    "lineNumber": 117,
    "interface": false
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "intersectOctree",
    "memberof": "src/raycasting/OctreeRaycaster.js~OctreeRaycaster",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/raycasting/OctreeRaycaster.js~OctreeRaycaster.intersectOctree",
    "access": "public",
    "description": "Finds (pseudo) leaf octants that intersect with the given ray.",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "An octree."
      },
      {
        "nullable": null,
        "types": [
          "Ray"
        ],
        "spread": false,
        "optional": false,
        "name": "ray",
        "description": "A ray."
      },
      {
        "nullable": null,
        "types": [
          "Octant[]"
        ],
        "spread": false,
        "optional": true,
        "name": "intersects",
        "description": "An optional target list to be filled with the intersecting octants."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Octant[]"
      ],
      "spread": false,
      "description": "The intersecting octants. Sorted by distance, closest first."
    }
  },
  {
    "__docId__": 178,
    "kind": "file",
    "name": "src/raycasting/points/index.js",
    "content": "export { RayPointIntersection } from \"./RayPointIntersection.js\";\r\nexport { testPoints } from \"./testPoints.js\";\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/raycasting/points/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 179,
    "kind": "file",
    "name": "src/raycasting/points/RayPointIntersection.js",
    "content": "/**\r\n * A collection of ray-point intersection data.\r\n */\r\n\r\nexport class RayPointIntersection {\r\n\r\n\t/**\r\n\t * Constructs new ray-point intersection data.\r\n\t *\r\n\t * @param {Number} distance - The distance from the origin of the ray to the point.\r\n\t * @param {Number} distanceToRay - The distance from the point to the ray.\r\n\t * @param {Vector3} point - The point.\r\n\t * @param {Object} [object=null] - The point's data.\r\n\t */\r\n\r\n\tconstructor(distance, distanceToRay, point, object = null) {\r\n\r\n\t\t/**\r\n\t\t * The distance from the origin of the ray to the point.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\r\n\t\tthis.distance = distance;\r\n\r\n\t\t/**\r\n\t\t * The shortest distance from the point to the ray.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\r\n\t\tthis.distanceToRay = distanceToRay;\r\n\r\n\t\t/**\r\n\t\t * The point.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\r\n\t\tthis.point = point;\r\n\r\n\t\t/**\r\n\t\t * The point's data.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\r\n\t\tthis.object = object;\r\n\r\n\t}\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/raycasting/points/RayPointIntersection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 180,
    "kind": "class",
    "name": "RayPointIntersection",
    "memberof": "src/raycasting/points/RayPointIntersection.js",
    "static": true,
    "longname": "src/raycasting/points/RayPointIntersection.js~RayPointIntersection",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{RayPointIntersection}",
    "description": "A collection of ray-point intersection data.",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 181,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/raycasting/points/RayPointIntersection.js~RayPointIntersection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/raycasting/points/RayPointIntersection.js~RayPointIntersection#constructor",
    "access": "public",
    "description": "Constructs new ray-point intersection data.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "distance",
        "description": "The distance from the origin of the ray to the point."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "distanceToRay",
        "description": "The distance from the point to the ray."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The point."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "object",
        "description": "The point's data."
      }
    ]
  },
  {
    "__docId__": 182,
    "kind": "member",
    "name": "distance",
    "memberof": "src/raycasting/points/RayPointIntersection.js~RayPointIntersection",
    "static": false,
    "longname": "src/raycasting/points/RayPointIntersection.js~RayPointIntersection#distance",
    "access": "public",
    "description": "The distance from the origin of the ray to the point.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 183,
    "kind": "member",
    "name": "distanceToRay",
    "memberof": "src/raycasting/points/RayPointIntersection.js~RayPointIntersection",
    "static": false,
    "longname": "src/raycasting/points/RayPointIntersection.js~RayPointIntersection#distanceToRay",
    "access": "public",
    "description": "The shortest distance from the point to the ray.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 184,
    "kind": "member",
    "name": "point",
    "memberof": "src/raycasting/points/RayPointIntersection.js~RayPointIntersection",
    "static": false,
    "longname": "src/raycasting/points/RayPointIntersection.js~RayPointIntersection#point",
    "access": "public",
    "description": "The point.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "object",
    "memberof": "src/raycasting/points/RayPointIntersection.js~RayPointIntersection",
    "static": false,
    "longname": "src/raycasting/points/RayPointIntersection.js~RayPointIntersection#object",
    "access": "public",
    "description": "The point's data.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 186,
    "kind": "file",
    "name": "src/raycasting/points/testPoints.js",
    "content": "import { Vector3 } from \"math-ds\";\r\nimport { RayPointIntersection } from \"./RayPointIntersection.js\";\r\n\r\n/**\r\n * Collects points that intersect with the given ray.\r\n *\r\n * @param {PointOctant[]} octants - An array containing octants that intersect with the ray.\r\n * @param {Raycaster} raycaster - The raycaster.\r\n * @param {RayPointIntersection[]} intersects - An array to be filled with intersecting points.\r\n */\r\n\r\nexport function testPoints(octants, raycaster, intersects) {\r\n\r\n\tconst threshold = raycaster.params.Points.threshold;\r\n\tconst thresholdSq = threshold * threshold;\r\n\r\n\tlet intersectPoint;\r\n\tlet distance, distanceToRay;\r\n\tlet rayPointDistanceSq;\r\n\r\n\tlet i, j, il, jl;\r\n\tlet octant, points, point;\r\n\r\n\tfor(i = 0, il = octants.length; i < il; ++i) {\r\n\r\n\t\toctant = octants[i];\r\n\t\tpoints = octant.points;\r\n\r\n\t\tif(points !== null) {\r\n\r\n\t\t\tfor(j = 0, jl = points.length; j < jl; ++j) {\r\n\r\n\t\t\t\tpoint = points[j];\r\n\t\t\t\trayPointDistanceSq = raycaster.ray.distanceSqToPoint(point);\r\n\r\n\t\t\t\tif(rayPointDistanceSq < thresholdSq) {\r\n\r\n\t\t\t\t\tintersectPoint = raycaster.ray.closestPointToPoint(point, new Vector3());\r\n\t\t\t\t\tdistance = raycaster.ray.origin.distanceTo(intersectPoint);\r\n\r\n\t\t\t\t\tif(distance >= raycaster.near && distance <= raycaster.far) {\r\n\r\n\t\t\t\t\t\tdistanceToRay = Math.sqrt(rayPointDistanceSq);\r\n\r\n\t\t\t\t\t\tintersects.push(new RayPointIntersection(\r\n\t\t\t\t\t\t\tdistance,\r\n\t\t\t\t\t\t\tdistanceToRay,\r\n\t\t\t\t\t\t\tintersectPoint,\r\n\t\t\t\t\t\t\toctant.data[j]\r\n\t\t\t\t\t\t));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Sourcecode/JavaScript/sparse-octree/src/raycasting/points/testPoints.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 187,
    "kind": "function",
    "name": "testPoints",
    "memberof": "src/raycasting/points/testPoints.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/raycasting/points/testPoints.js~testPoints",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree",
    "importStyle": "{testPoints}",
    "description": "Collects points that intersect with the given ray.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "PointOctant[]"
        ],
        "spread": false,
        "optional": false,
        "name": "octants",
        "description": "An array containing octants that intersect with the ray."
      },
      {
        "nullable": null,
        "types": [
          "Raycaster"
        ],
        "spread": false,
        "optional": false,
        "name": "raycaster",
        "description": "The raycaster."
      },
      {
        "nullable": null,
        "types": [
          "RayPointIntersection[]"
        ],
        "spread": false,
        "optional": false,
        "name": "intersects",
        "description": "An array to be filled with intersecting points."
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# Sparse Octree\r\n\r\n[![Build status](https://travis-ci.org/vanruesc/sparse-octree.svg?branch=master)](https://travis-ci.org/vanruesc/sparse-octree)\r\n[![npm version](https://badgen.net/npm/v/sparse-octree?color=green)](https://www.npmjs.com/package/sparse-octree)\r\n[![Peer dependencies](https://david-dm.org/vanruesc/sparse-octree/peer-status.svg)](https://david-dm.org/vanruesc/sparse-octree?type=peer)\r\n\r\nA sparse, pointer-based octree data structure. For a linear implementation see [linear-octree](https://github.com/vanruesc/linear-octree).\r\n\r\n*[Demo](https://vanruesc.github.io/sparse-octree/public/demo)&ensp;&middot;&ensp;[Sandbox](https://codesandbox.io/s/sparse-octree-3yn8o)&ensp;&middot;&ensp;[Documentation](https://vanruesc.github.io/sparse-octree/public/docs)*\r\n\r\n\r\n## Installation\r\n\r\nThis library requires the peer dependencies [iterator-result](https://github.com/vanruesc/iterator-result) and [math-ds](https://github.com/vanruesc/math-ds).\r\n\r\n```sh\r\nnpm install iterator-result math-ds\r\n``` \r\n\r\n```sh\r\nnpm install sparse-octree\r\n``` \r\n\r\n\r\n## Usage\r\n\r\n##### Points\r\n\r\n```js\r\nimport { Vector3 } from \"math-ds\";\r\nimport { PointOctree } from \"sparse-octree\";\r\n\r\nconst min = new Vector3(-1, -1, -1);\r\nconst max = new Vector3(1, 1, 1);\r\n\r\nconst octree = new PointOctree(min, max);\r\n\r\nconst myData = {};\r\nconst p1 = new Vector3(0, 0, 0);\r\nconst p2 = new Vector3(0, 0, 0.5);\r\n\r\noctree.insert(p1, myData);\r\noctree.move(p1, p2);\r\noctree.get(p2); // => myData\r\n\r\noctree.remove(p2);\r\noctree.get(p2); // => null\r\n```\r\n\r\n##### Custom Octrees\r\n\r\n```js\r\nimport { Octree, CubicOctant } from \"sparse-octree\";\r\n\r\nexport class CubicOctree extends Octree {\r\n\r\n\tconstructor(min, size) {\r\n\r\n\t\tthis.root = new CubicOctant(min, size);\r\n\r\n\t}\r\n\r\n}\r\n```\r\n\r\n\r\n## Features\r\n\r\n- Pointer-based structure\r\n  - Handles octant splitting\r\n  - Supports cubic octrees for reduced memory usage\r\n  - Dynamic depth\r\n- Adheres to a [common octant layout](https://vanruesc.github.io/sparse-octree/public/docs/variable/index.html#static-variable-layout)\r\n- Supports raycasting\r\n- Supports culling\r\n- Can be extended to manage any data\r\n- Provides a point management implementation\r\n\r\n\r\n## Octree Helper\r\n\r\nThe [octree-helper](https://github.com/vanruesc/octree-helper) module provides an octree visualization tool for [three.js](https://threejs.org/).\r\n\r\n\r\n## Contributing\r\n\r\nMaintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code.\r\n",
    "longname": "D:\\Sourcecode\\JavaScript\\sparse-octree\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n\t\"name\": \"sparse-octree\",\r\n\t\"version\": \"6.0.1\",\r\n\t\"description\": \"A sparse octree data structure.\",\r\n\t\"homepage\": \"https://github.com/vanruesc/sparse-octree\",\r\n\t\"main\": \"build/sparse-octree.js\",\r\n\t\"module\": \"build/sparse-octree.esm.js\",\r\n\t\"sideEffects\": false,\r\n\t\"license\": \"Zlib\",\r\n\r\n\t\"keywords\": [\r\n\t\t\"partition\",\r\n\t\t\"hierarchy\",\r\n\t\t\"subdivision\",\r\n\t\t\"raycasting\",\r\n\t\t\"3d\",\r\n\t\t\"spatial\",\r\n\t\t\"voxel\",\r\n\t\t\"points\",\r\n\t\t\"frustum\",\r\n\t\t\"culling\",\r\n\t\t\"pointer\"\r\n\t],\r\n\r\n\t\"author\": {\r\n\t\t\"name\": \"Raoul van Rüschen\",\r\n\t\t\"email\": \"vanruesc@outlook.de\"\r\n\t},\r\n\r\n\t\"repository\": {\r\n\t\t\"type\": \"git\",\r\n\t\t\"url\": \"https://github.com/vanruesc/sparse-octree.git\"\r\n\t},\r\n\r\n\t\"bugs\": {\r\n\t\t\"url\": \"https://github.com/vanruesc/sparse-octree/issues\"\r\n\t},\r\n\r\n\t\"files\": [\"build\"],\r\n\r\n\t\"scripts\": {\r\n\t\t\"ava\": \"ava\",\r\n\t\t\"lint\": \"npm run lint:lib && npm run lint:demo && npm run lint:test\",\r\n\t\t\"lint:config\": \"eslint *.js\",\r\n\t\t\"lint:lib\": \"eslint src\",\r\n\t\t\"lint:demo\": \"eslint demo/src\",\r\n\t\t\"lint:test\": \"eslint test\",\r\n\t\t\"build\": \"rollup -c\",\r\n\t\t\"build:production\": \"cross-env NODE_ENV=production npm run build\",\r\n\t\t\"watch\": \"rollup -c --watch\",\r\n\t\t\"doc\": \"rimraf public/docs && esdoc\",\r\n\t\t\"pretest\": \"npm run lint && npm run build:production\",\r\n\t\t\"test\": \"npm run ava\",\r\n\t\t\"prepack\": \"npm test\"\r\n\t},\r\n\r\n\t\"ava\": {\r\n\t\t\"failFast\": true,\r\n\t\t\"files\": [\"test/**/*.js\"]\r\n\t},\r\n\r\n\t\"eslintConfig\": {\r\n\t\t\"extends\": \"delta\"\r\n\t},\r\n\r\n\t\"peerDependencies\": {\r\n\t\t\"iterator-result\": \">= 0.0.0 < 1.0.0\",\r\n\t\t\"math-ds\": \">= 1.0.0 < 2.0.0\"\r\n\t},\r\n\r\n\t\"devDependencies\": {\r\n\t\t\"@babel/core\": \"7.x.x\",\r\n\t\t\"@babel/preset-env\": \"7.x.x\",\r\n\t\t\"ava\": \"2.x.x\",\r\n\t\t\"cross-env\": \"6.x.x\",\r\n\t\t\"dat.gui\": \"0.x.x\",\r\n\t\t\"delta-controls\": \"2.x.x\",\r\n\t\t\"esdoc\": \"1.x.x\",\r\n\t\t\"esdoc-importpath-plugin\": \"1.x.x\",\r\n\t\t\"esdoc-standard-plugin\": \"1.x.x\",\r\n\t\t\"eslint\": \"6.x.x\",\r\n\t\t\"eslint-config-delta\": \"1.x.x\",\r\n\t\t\"iterator-result\": \"0.x.x\",\r\n\t\t\"math-ds\": \"1.x.x\",\r\n\t\t\"rimraf\": \"3.x.x\",\r\n\t\t\"octree-helper\": \"1.x.x\",\r\n\t\t\"rollup\": \"1.x.x\",\r\n\t\t\"rollup-plugin-babel\": \"4.x.x\",\r\n\t\t\"rollup-plugin-babel-minify\": \"9.x.x\",\r\n\t\t\"rollup-plugin-node-resolve\": \"5.x.x\",\r\n\t\t\"synthetic-event\": \"1.x.x\",\r\n\t\t\"three\": \"0.x.x\",\r\n\t\t\"three-demo\": \"3.x.x\"\r\n\t}\r\n}\r\n",
    "longname": "D:\\Sourcecode\\JavaScript\\sparse-octree\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]