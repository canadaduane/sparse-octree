/**
 * sparse-octree v5.2.1 build Wed Jun 26 2019
 * https://github.com/vanruesc/sparse-octree
 * Copyright 2019 Raoul van RÃ¼schen, Zlib
 */
"use strict";function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}(function(a,b){"object"===("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?b(exports):"function"==typeof define&&define.amd?define(["exports"],b):(a=a||self,b(a.SPARSEOCTREE={}))})(void 0,function(a){'use strict';var I=Math.round,J=Math.abs,K=Math.min,L=Math.max,M=Math.sqrt;function d(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function e(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function f(a,b,c){return b&&e(a.prototype,b),c&&e(a,c),a}function g(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function");a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,writable:!0,configurable:!0}}),b&&i(a,b)}function h(a){return h=Object.setPrototypeOf?Object.getPrototypeOf:function(a){return a.__proto__||Object.getPrototypeOf(a)},h(a)}function i(a,b){return i=Object.setPrototypeOf||function(a,b){return a.__proto__=b,a},i(a,b)}function j(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function k(a,b){return b&&("object"===_typeof(b)||"function"==typeof b)?b:j(a)}function l(a,b){for(;!Object.prototype.hasOwnProperty.call(a,b)&&(a=h(a),null!==a););return a}function m(a,b,c){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(a,b,c){var d=l(a,b);if(d){var e=Object.getOwnPropertyDescriptor(d,b);return e.get?e.get.call(c):e.value}},m(a,b,c||a)}function n(a){return o(a)||q(a)||s()}function o(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}function q(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function s(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function t(a,b,c,d,e,f){var g=0;return a>b&&a>c?(e<a&&(g|=2),f<a&&(g|=1)):b>c?(d<b&&(g|=4),f<b&&(g|=1)):(d<c&&(g|=4),e<c&&(g|=2)),g}function w(a,b,c,d){var e,f=0;return b<c?(e=b,f=0):(e=c,f=1),d<e&&(f=2),r[a][f]}function x(a,b,c,d,e,f,g,h,i){var j,k,l,m,n=a.children;if(0<=e&&0<=f&&0<=g)if(null===n)i.push(a);else{k=.5*(b+e),l=.5*(c+f),m=.5*(d+g),j=t(b,c,d,k,l,m);do 0===j?(x(n[aa],b,c,d,k,l,m,h,i),j=w(j,k,l,m)):1===j?(x(n[1^aa],b,c,m,k,l,g,h,i),j=w(j,k,l,g)):2===j?(x(n[2^aa],b,l,d,k,f,m,h,i),j=w(j,k,f,m)):3===j?(x(n[3^aa],b,l,m,k,f,g,h,i),j=w(j,k,f,g)):4===j?(x(n[4^aa],k,c,d,e,l,m,h,i),j=w(j,e,l,m)):5===j?(x(n[5^aa],k,c,m,e,l,g,h,i),j=w(j,e,l,g)):6===j?(x(n[6^aa],k,l,d,e,f,m,h,i),j=w(j,e,f,m)):7===j?(x(n[7^aa],k,l,m,e,f,g,h,i),j=8):void 0;while(8>j)}}function y(a){var b,c,e,f=a.children,g=0;if(null!==f)for(b=0,c=f.length;b<c;++b)e=1+y(f[b]),e>g&&(g=e);return g}function z(a,b,c){var d,e,f=a.children;if(ca.min=a.min,ca.max=a.max,b.intersectsBox(ca))if(null!==f)for(d=0,e=f.length;d<e;++d)z(f[d],b,c);else c.push(a)}function A(a,b,c,d){var e,f,g=a.children;if(c===b)d.push(a);else if(null!==g)for(++c,e=0,f=g.length;e<f;++e)A(g[e],b,c,d)}function B(a){var b,c,d=a.children,e=0;if(null!==d)for(b=0,c=d.length;b<c;++b)e+=B(d[b]);else null!==a.points&&(e=a.points.length);return e}function C(a,b,c,d,e){var f,g,h=d.children,j=!1,k=!1;if(d.contains(a,c.bias)){if(null===h){if(null===d.points)d.points=[],d.data=[];else for(f=0,g=d.points.length;!j&&f<g;++f)j=d.points[f].equals(a);j?(d.data[f-1]=b,k=!0):d.points.length<c.maxPoints||e===c.maxDepth?(d.points.push(a.clone()),d.data.push(b),++c.pointCount,k=!0):(d.split(),d.redistribute(c.bias),h=d.children)}if(null!==h)for(++e,f=0,g=h.length;!k&&f<g;++f)k=C(a,b,c,h[f],e)}return k}function D(a,b,c,d){var e,f,g,h,j,k=c.children,m=null;if(c.contains(a,b.bias))if(null!==k)for(e=0,f=k.length;null===m&&e<f;++e)m=D(a,b,k[e],c);else if(null!==c.points)for(g=c.points,h=c.data,(e=0,f=g.length);e<f;++e)if(g[e].equals(a)){j=f-1,m=h[e],e<j&&(g[e]=g[j],h[e]=h[j]),g.pop(),h.pop(),--b.pointCount,null!==d&&B(d)<=b.maxPoints&&d.merge();break}return m}function E(a,b,c){var d,e,f,g=c.children,h=null;if(c.contains(a,b.bias))if(null!==g)for(d=0,e=g.length;null===h&&d<e;++d)h=E(a,b,g[d]);else if(null!==c.points)for(f=c.points,d=0,e=f.length;null===h&&d<e;++d)a.equals(f[d])&&(h=c.data[d]);return h}function F(a,b,c,d,e,f){var g,h,j,k=d.children,m=null;if(d.contains(a,c.bias))if(!d.contains(b,c.bias))m=D(a,c,d,e),C(b,m,c,e,f-1);else if(null!==k)for(++f,g=0,h=k.length;null===m&&g<h;++g)m=F(a,b,c,k[g],d,f);else if(null!==d.points)for(j=d.points,g=0,h=j.length;g<h;++g)if(a.equals(j[g])){j[g].copy(b),m=d.data[g];break}return m}function G(a,b,c,d){var e,f,g=null,h=b;if(null!==d.children){var j,k,m=d.children.map(function(b){return{octant:b,distance:b.distanceToCenterSquared(a)}}).sort(function(c,a){return c.distance-a.distance});for(e=0,f=m.length;e<f&&(j=m[e].octant,!(j.contains(a,h)&&(k=G(a,h,c,j),null!==k&&(h=k.distance,g=k,0===h))));++e);}else if(null!==d.points){var n,o=d.points,p=-1;for(e=0,f=o.length;e<f;++e)if(!o[e].equals(a))n=a.distanceTo(o[e]),n<h&&(h=n,p=e);else if(!c){h=0,p=e;break}0<=p&&(g={point:o[p],data:d.data[p],distance:h})}return g}function H(a,b,c,d,e){var f,g,h=d.children;if(null!==h){var j;for(f=0,g=h.length;f<g;++f)j=h[f],j.contains(a,b)&&H(a,b,c,j,e)}else if(null!==d.points){var k,m=d.points;for(f=0,g=m.length;f<g;++f)k=m[f],k.equals(a)?!c&&e.push({point:k.clone(),data:d.data[f]}):k.distanceToSquared(a)<=b*b&&e.push({point:k.clone(),data:d.data[f]})}}var N=function(){var b=Math.cos,c=Math.sin;function a(){var b=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,e=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;d(this,a),this.x=b,this.y=c,this.z=e}return f(a,[{key:"set",value:function(a,b,c){return this.x=a,this.y=b,this.z=c,this}},{key:"copy",value:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z)}},{key:"fromArray",value:function(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this}},{key:"toArray",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a}},{key:"setFromSpherical",value:function(a){this.setFromSphericalCoords(a.radius,a.phi,a.theta)}},{key:"setFromSphericalCoords",value:function(a,d,e){var f=c(d)*a;return this.x=f*c(e),this.y=b(d)*a,this.z=f*b(e),this}},{key:"setFromCylindrical",value:function(a){this.setFromCylindricalCoords(a.radius,a.theta,a.y)}},{key:"setFromCylindricalCoords",value:function(a,d,e){return this.x=a*c(d),this.y=e,this.z=a*b(d),this}},{key:"setFromMatrixColumn",value:function(a,b){return this.fromArray(a.elements,4*b)}},{key:"setFromMatrixPosition",value:function(a){var b=a.elements;return this.x=b[12],this.y=b[13],this.z=b[14],this}},{key:"setFromMatrixScale",value:function(a){var b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length(),d=this.setFromMatrixColumn(a,2).length();return this.x=b,this.y=c,this.z=d,this}},{key:"add",value:function(a){return this.x+=a.x,this.y+=a.y,this.z+=a.z,this}},{key:"addScalar",value:function(a){return this.x+=a,this.y+=a,this.z+=a,this}},{key:"addVectors",value:function(c,a){return this.x=c.x+a.x,this.y=c.y+a.y,this.z=c.z+a.z,this}},{key:"addScaledVector",value:function(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this}},{key:"sub",value:function(a){return this.x-=a.x,this.y-=a.y,this.z-=a.z,this}},{key:"subScalar",value:function(a){return this.x-=a,this.y-=a,this.z-=a,this}},{key:"subVectors",value:function(c,a){return this.x=c.x-a.x,this.y=c.y-a.y,this.z=c.z-a.z,this}},{key:"multiply",value:function(a){return this.x*=a.x,this.y*=a.y,this.z*=a.z,this}},{key:"multiplyScalar",value:function(a){return this.x*=a,this.y*=a,this.z*=a,this}},{key:"multiplyVectors",value:function(c,a){return this.x=c.x*a.x,this.y=c.y*a.y,this.z=c.z*a.z,this}},{key:"divide",value:function(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this}},{key:"divideScalar",value:function(a){return this.x/=a,this.y/=a,this.z/=a,this}},{key:"crossVectors",value:function(c,a){var b=c.x,d=c.y,e=c.z,f=a.x,g=a.y,h=a.z;return this.x=d*h-e*g,this.y=e*f-b*h,this.z=b*g-d*f,this}},{key:"cross",value:function(a){return this.crossVectors(this,a)}},{key:"transformDirection",value:function(a){var b=this.x,c=this.y,d=this.z,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d,this.y=f[1]*b+f[5]*c+f[9]*d,this.z=f[2]*b+f[6]*c+f[10]*d,this.normalize()}},{key:"applyMatrix3",value:function(a){var b=this.x,c=this.y,d=this.z,f=a.elements;return this.x=f[0]*b+f[3]*c+f[6]*d,this.y=f[1]*b+f[4]*c+f[7]*d,this.z=f[2]*b+f[5]*c+f[8]*d,this}},{key:"applyMatrix4",value:function(a){var b=this.x,c=this.y,d=this.z,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d+f[12],this.y=f[1]*b+f[5]*c+f[9]*d+f[13],this.z=f[2]*b+f[6]*c+f[10]*d+f[14],this}},{key:"applyQuaternion",value:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=h*b+f*d-g*c,j=h*c+g*b-e*d,k=h*d+e*c-f*b,l=-e*b-f*c-g*d;return this.x=i*h+l*-e+j*-g-k*-f,this.y=j*h+l*-f+k*-e-i*-g,this.z=k*h+l*-g+i*-f-j*-e,this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}},{key:"dot",value:function(a){return this.x*a.x+this.y*a.y+this.z*a.z}},{key:"reflect",value:function(a){var b=a.x,c=a.y,d=a.z;return this.sub(a.multiplyScalar(2*this.dot(a))),a.set(b,c,d),this}},{key:"angleTo",value:function(a){var b=Math.acos,c=this.dot(a)/M(this.lengthSquared()*a.lengthSquared());return b(K(L(c,-1),1))}},{key:"manhattanLength",value:function(){return J(this.x)+J(this.y)+J(this.z)}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z}},{key:"length",value:function(){return M(this.x*this.x+this.y*this.y+this.z*this.z)}},{key:"manhattanDistanceTo",value:function(a){return J(this.x-a.x)+J(this.y-a.y)+J(this.z-a.z)}},{key:"distanceToSquared",value:function(a){var b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d}},{key:"distanceTo",value:function(a){return M(this.distanceToSquared(a))}},{key:"normalize",value:function(){return this.divideScalar(this.length())}},{key:"setLength",value:function(a){return this.normalize().multiplyScalar(a)}},{key:"min",value:function(a){return this.x=K(this.x,a.x),this.y=K(this.y,a.y),this.z=K(this.z,a.z),this}},{key:"max",value:function(a){return this.x=L(this.x,a.x),this.y=L(this.y,a.y),this.z=L(this.z,a.z),this}},{key:"clamp",value:function(a,b){return this.x=L(a.x,K(b.x,this.x)),this.y=L(a.y,K(b.y,this.y)),this.z=L(a.z,K(b.z,this.z)),this}},{key:"floor",value:function(){var a=Math.floor;return this.x=a(this.x),this.y=a(this.y),this.z=a(this.z),this}},{key:"ceil",value:function(){var a=Math.ceil;return this.x=a(this.x),this.y=a(this.y),this.z=a(this.z),this}},{key:"round",value:function(){return this.x=I(this.x),this.y=I(this.y),this.z=I(this.z),this}},{key:"lerp",value:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this}},{key:"lerpVectors",value:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)}},{key:"equals",value:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z}}]),a}(),O=new N,v=[new N,new N,new N,new N,new N,new N,new N,new N],P=function(){function a(){var b=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new N(1/0,1/0,1/0),c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new N(-Infinity,-Infinity,-Infinity);d(this,a),this.min=b,this.max=c}return f(a,[{key:"set",value:function(a,b){return this.min.copy(a),this.max.copy(b),this}},{key:"copy",value:function(a){return this.min.copy(a.min),this.max.copy(a.max),this}},{key:"clone",value:function(){return new this.constructor().copy(this)}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-Infinity,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}},{key:"getCenter",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new N;return this.isEmpty()?a.set(0,0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new N;return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)}},{key:"setFromSphere",value:function(a){return this.set(a.center,a.center),this.expandByScalar(a.radius),this}},{key:"expandByPoint",value:function(a){return this.min.min(a),this.max.max(a),this}},{key:"expandByVector",value:function(a){return this.min.sub(a),this.max.add(a),this}},{key:"expandByScalar",value:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this}},{key:"setFromPoints",value:function(a){var b,c;for(this.min.set(0,0,0),this.max.set(0,0,0),(b=0,c=a.length);b<c;++b)this.expandByPoint(a[b]);return this}},{key:"setFromCenterAndSize",value:function(a,b){var c=O.copy(b).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this}},{key:"clampPoint",value:function(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new N;return b.copy(a).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(a){var b=O.copy(a).clamp(this.min,this.max);return b.sub(a).length()}},{key:"applyMatrix4",value:function(a){var b=this.min,c=this.max;return this.isEmpty()||(v[0].set(b.x,b.y,b.z).applyMatrix4(a),v[1].set(b.x,b.y,c.z).applyMatrix4(a),v[2].set(b.x,c.y,b.z).applyMatrix4(a),v[3].set(b.x,c.y,c.z).applyMatrix4(a),v[4].set(c.x,b.y,b.z).applyMatrix4(a),v[5].set(c.x,b.y,c.z).applyMatrix4(a),v[6].set(c.x,c.y,b.z).applyMatrix4(a),v[7].set(c.x,c.y,c.z).applyMatrix4(a),this.setFromPoints(v)),this}},{key:"translate",value:function(a){return this.min.add(a),this.max.add(a),this}},{key:"intersect",value:function(a){return this.min.max(a.min),this.max.min(a.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(a){return this.min.min(a.min),this.max.max(a.max),this}},{key:"containsPoint",value:function(a){var b=this.min,c=this.max;return a.x>=b.x&&a.y>=b.y&&a.z>=b.z&&a.x<=c.x&&a.y<=c.y&&a.z<=c.z}},{key:"containsBox",value:function(a){var b=this.min,c=this.max,d=a.min,e=a.max;return b.x<=d.x&&e.x<=c.x&&b.y<=d.y&&e.y<=c.y&&b.z<=d.z&&e.z<=c.z}},{key:"intersectsBox",value:function(a){var b=this.min,c=this.max,d=a.min,e=a.max;return e.x>=b.x&&e.y>=b.y&&e.z>=b.z&&d.x<=c.x&&d.y<=c.y&&d.z<=c.z}},{key:"intersectsSphere",value:function(a){var b=this.clampPoint(a.center,O);return b.distanceToSquared(a.center)<=a.radius*a.radius}},{key:"intersectsPlane",value:function(a){var b,c;return 0<a.normal.x?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x),0<a.normal.y?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y),0<a.normal.z?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z),b<=-a.constant&&c>=-a.constant}},{key:"equals",value:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}]),a}(),Q=[new N,new N,new N,new N],R=function(){function a(){var b=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new N,c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new N;d(this,a),this.origin=b,this.direction=c}return f(a,[{key:"set",value:function(a,b){return this.origin.copy(a),this.direction.copy(b),this}},{key:"copy",value:function(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this}},{key:"clone",value:function(){return new this.constructor().copy(this)}},{key:"at",value:function(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new N;return b.copy(this.direction).multiplyScalar(a).add(this.origin)}},{key:"lookAt",value:function(a){return this.direction.copy(a).sub(this.origin).normalize(),this}},{key:"recast",value:function(a){return this.origin.copy(this.at(a,Q[0])),this}},{key:"closestPointToPoint",value:function(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new N,c=b.subVectors(a,this.origin).dot(this.direction);return 0<=c?b.copy(this.direction).multiplyScalar(c).add(this.origin):b.copy(this.origin)}},{key:"distanceSquaredToPoint",value:function(a){var b=Q[0].subVectors(a,this.origin).dot(this.direction);return 0>b?this.origin.distanceToSquared(a):Q[0].copy(this.direction).multiplyScalar(b).add(this.origin).distanceToSquared(a)}},{key:"distanceToPoint",value:function(a){return M(this.distanceSquaredToPoint(a))}},{key:"distanceToPlane",value:function(a){var b=a.normal.dot(this.direction),c=0===b?0===a.distanceToPoint(this.origin)?0:-1:-(this.origin.dot(a.normal)+a.constant)/b;return 0<=c?c:null}},{key:"distanceSquaredToSegment",value:function(a,b,d,e){var f,g,h,i,j,k=Q[0].copy(a).add(b).multiplyScalar(.5),l=Q[1].copy(b).sub(a).normalize(),m=Q[2].copy(this.origin).sub(k),n=.5*a.distanceTo(b),o=-this.direction.dot(l),p=m.dot(this.direction),q=-m.dot(l),r=m.lengthSq(),c=J(1-o*o);return 0<c?(f=o*q-p,g=o*p-q,h=n*c,0<=f?g>=-h?g<=h?(i=1/c,f*=i,g*=i,j=f*(f+o*g+2*p)+g*(o*f+g+2*q)+r):(g=n,f=L(0,-(o*g+p)),j=-f*f+g*(g+2*q)+r):(g=-n,f=L(0,-(o*g+p)),j=-f*f+g*(g+2*q)+r):g<=-h?(f=L(0,-(-o*n+p)),g=0<f?-n:K(L(-n,-q),n),j=-f*f+g*(g+2*q)+r):g<=h?(f=0,g=K(L(-n,-q),n),j=g*(g+2*q)+r):(f=L(0,-(o*n+p)),g=0<f?n:K(L(-n,-q),n),j=-f*f+g*(g+2*q)+r)):(g=0<o?-n:n,f=L(0,-(o*g+p)),j=-f*f+g*(g+2*q)+r),void 0!==d&&d.copy(this.direction).multiplyScalar(f).add(this.origin),void 0!==e&&e.copy(l).multiplyScalar(g).add(k),j}},{key:"intersectSphere",value:function(a){var b,c,d,e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new N,f=Q[0].subVectors(a.center,this.origin),g=f.dot(this.direction),h=f.dot(f)-g*g,i=a.radius*a.radius,j=null;return h<=i&&(b=M(i-h),c=g-b,d=g+b,(0<=c||0<=d)&&(j=0>c?this.at(d,e):this.at(c,e))),j}},{key:"intersectsSphere",value:function(a){return this.distanceSqToPoint(a.center)<=a.radius*a.radius}},{key:"intersectPlane",value:function(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new N,c=this.distanceToPlane(a);return null===c?null:this.at(c,b)}},{key:"intersectsPlane",value:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b}},{key:"intersectBox",value:function(a){var b,c,d,e,f,g,h=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new N,i=this.origin,j=this.direction,k=a.min,l=a.max,m=1/j.x,n=1/j.y,o=1/j.z,p=null;return 0<=m?(b=(k.x-i.x)*m,c=(l.x-i.x)*m):(b=(l.x-i.x)*m,c=(k.x-i.x)*m),0<=n?(d=(k.y-i.y)*n,e=(l.y-i.y)*n):(d=(l.y-i.y)*n,e=(k.y-i.y)*n),b<=e&&d<=c&&((d>b||b!==b)&&(b=d),(e<c||c!==c)&&(c=e),0<=o?(f=(k.z-i.z)*o,g=(l.z-i.z)*o):(f=(l.z-i.z)*o,g=(k.z-i.z)*o),b<=g&&f<=c&&((f>b||b!==b)&&(b=f),(g<c||c!==c)&&(c=g),0<=c&&(p=this.at(0<=b?b:c,h)))),p}},{key:"intersectsBox",value:function(a){return null!==this.intersectBox(a,Q[0])}},{key:"intersectTriangle",value:function(d,a,b,c,e){var f,g,h,i,j,k=this.direction,l=Q[0],m=Q[1],n=Q[2],o=Q[3],p=null;return m.subVectors(a,d),n.subVectors(b,d),o.crossVectors(m,n),f=k.dot(o),0===f||c&&0<f||(0<f?g=1:(g=-1,f=-f),l.subVectors(this.origin,d),h=g*k.dot(n.crossVectors(l,n)),0<=h&&(i=g*k.dot(m.cross(l)),0<=i&&h+i<=f&&(j=-g*l.dot(o),0<=j&&(p=this.at(j/f,e))))),p}},{key:"applyMatrix4",value:function(a){return this.origin.applyMatrix4(a),this.direction.transformDirection(a),this}},{key:"equals",value:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}}]),a}(),S=new N,c=function(){function a(){var b=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new N,c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new N;d(this,a),this.min=b,this.max=c,this.children=null}return f(a,[{key:"getCenter",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new N;return a.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getDimensions",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new N;return a.subVectors(this.max,this.min)}},{key:"split",value:function(){var a,b,c=this.min,d=this.max,e=this.getCenter(S),f=this.children=[null,null,null,null,null,null,null,null];for(a=0;8>a;++a)b=T[a],f[a]=new this.constructor(new N(0===b[0]?c.x:e.x,0===b[1]?c.y:e.y,0===b[2]?c.z:e.z),new N(0===b[0]?e.x:d.x,0===b[1]?e.y:d.y,0===b[2]?e.z:d.z))}}]),a}(),T=[new Uint8Array([0,0,0]),new Uint8Array([0,0,1]),new Uint8Array([0,1,0]),new Uint8Array([0,1,1]),new Uint8Array([1,0,0]),new Uint8Array([1,0,1]),new Uint8Array([1,1,0]),new Uint8Array([1,1,1])],U=[new Uint8Array([0,4]),new Uint8Array([1,5]),new Uint8Array([2,6]),new Uint8Array([3,7]),new Uint8Array([0,2]),new Uint8Array([1,3]),new Uint8Array([4,6]),new Uint8Array([5,7]),new Uint8Array([0,1]),new Uint8Array([2,3]),new Uint8Array([4,5]),new Uint8Array([6,7])],V=new N,W=function(){function a(){var b=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new N,c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;d(this,a),this.min=b,this.size=c,this.children=null}return f(a,[{key:"getCenter",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new N;return a.copy(this.min).addScalar(.5*this.size)}},{key:"getDimensions",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new N;return a.set(this.size,this.size,this.size)}},{key:"split",value:function(){var a,b,c=this.min,d=this.getCenter(V),e=.5*this.size,f=this.children=[null,null,null,null,null,null,null,null];for(a=0;8>a;++a)b=T[a],f[a]=new this.constructor(new N(0===b[0]?c.x:d.x,0===b[1]?c.y:d.y,0===b[2]?c.z:d.z),e)}},{key:"max",get:function(){return this.min.clone().addScalar(this.size)}}]),a}(),X=function(){function a(){var b=0<arguments.length&&void 0!==arguments[0]?arguments[0]:null,c=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1];d(this,a),this.value=b,this.done=c}return f(a,[{key:"reset",value:function(){this.value=null,this.done=!1}}]),a}(),Y=new P,b=function(){function a(b){var c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;d(this,a),this.octree=b,this.region=c,this.cull=null!==c,this.result=new X,this.trace=null,this.indices=null,this.reset()}return f(a,[{key:"reset",value:function(){var a=this.octree.root;return this.trace=[],this.indices=[],null!==a&&(Y.min=a.min,Y.max=a.max,(!this.cull||this.region.intersectsBox(Y))&&(this.trace.push(a),this.indices.push(0))),this.result.reset(),this}},{key:"next",value:function(){for(var a,b,c,d=this.cull,e=this.region,f=this.indices,g=this.trace,h=null,i=g.length-1;null===h&&0<=i;)if(a=f[i]++,b=g[i].children,!(8>a))g.pop(),f.pop(),--i;else if(null!==b){if(c=b[a],d&&(Y.min=c.min,Y.max=c.max,!e.intersectsBox(Y)))continue;g.push(c),f.push(0),++i}else h=g.pop(),f.pop();return this.result.value=h,this.result.done=null===h,this.result}},{key:"return",value:function(a){return this.result.value=a,this.result.done=!0,this.result}},{key:Symbol.iterator,value:function(){return this}}]),a}(),Z=[new N,new N,new N],$=new P,_=new R,r=[new Uint8Array([4,2,1]),new Uint8Array([5,3,8]),new Uint8Array([6,8,3]),new Uint8Array([7,8,8]),new Uint8Array([8,6,5]),new Uint8Array([8,7,8]),new Uint8Array([8,8,7]),new Uint8Array([8,8,8])],aa=0,ba=function(){function a(){d(this,a)}return f(a,null,[{key:"intersectOctree",value:function(a,b,c){var d,e,f,g,h,i,j,k,l,m=$.min.set(0,0,0),n=$.max.subVectors(a.max,a.min),o=a.getDimensions(Z[0]),p=Z[1].copy(o).multiplyScalar(.5),q=_.origin.copy(b.ray.origin),r=_.direction.copy(b.ray.direction);q.sub(a.getCenter(Z[2])).add(p),aa=0,0>r.x&&(q.x=o.x-q.x,r.x=-r.x,aa|=4),0>r.y&&(q.y=o.y-q.y,r.y=-r.y,aa|=2),0>r.z&&(q.z=o.z-q.z,r.z=-r.z,aa|=1),d=1/r.x,e=1/r.y,f=1/r.z,g=(m.x-q.x)*d,h=(n.x-q.x)*d,i=(m.y-q.y)*e,j=(n.y-q.y)*e,k=(m.z-q.z)*f,l=(n.z-q.z)*f,L(L(g,i),k)<K(K(h,j),l)&&x(a.root,g,i,k,h,j,l,b,c)}}]),a}(),ca=new P,da=function(){function a(b,e){d(this,a),this.root=void 0!==b&&void 0!==e?new c(b,e):null}return f(a,[{key:"getCenter",value:function(a){return this.root.getCenter(a)}},{key:"getDimensions",value:function(a){return this.root.getDimensions(a)}},{key:"getDepth",value:function(){return y(this.root)}},{key:"cull",value:function(a){var b=[];return z(this.root,a,b),b}},{key:"findOctantsByLevel",value:function(a){var b=[];return A(this.root,a,0,b),b}},{key:"raycast",value:function(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[];return ba.intersectOctree(this,a,b),b}},{key:"leaves",value:function(a){return new b(this,a)}},{key:Symbol.iterator,value:function(){return new b(this)}},{key:"min",get:function(){return this.root.min}},{key:"max",get:function(){return this.root.max}},{key:"children",get:function(){return this.root.children}}]),a}(),ea=new N,p=function(a){function b(a,c){var e;return d(this,b),e=k(this,h(b).call(this,a,c)),e.points=null,e.data=null,e}return g(b,a),f(b,[{key:"distanceToSquared",value:function(a){var b=ea.copy(a).clamp(this.min,this.max);return b.sub(a).lengthSquared()}},{key:"distanceToCenterSquared",value:function(a){var b=this.getCenter(ea),c=a.x-b.x,d=a.y-b.x,e=a.z-b.z;return c*c+d*d+e*e}},{key:"contains",value:function(a,b){var c=this.min,d=this.max;return a.x>=c.x-b&&a.y>=c.y-b&&a.z>=c.z-b&&a.x<=d.x+b&&a.y<=d.y+b&&a.z<=d.z+b}},{key:"redistribute",value:function(a){var b,c,d,e,f,g,h,k=this.children,l=this.points,m=this.data;if(null!==k&&null!==l)for(b=0,d=l.length;b<d;++b)for(g=l[b],h=m[b],(c=0,e=k.length);c<e;++c)if(f=k[c],f.contains(g,a)){null===f.points&&(f.points=[],f.data=[]),f.points.push(g),f.data.push(h);break}this.points=null,this.data=null}},{key:"merge",value:function(){var a,b,c,d=this.children;if(null!==d){for(this.points=[],this.data=[],(a=0,b=d.length);a<b;++a)if(c=d[a],null!==c.points){var e,f;(e=this.points).push.apply(e,n(c.points)),(f=this.data).push.apply(f,n(c.data))}this.children=null}}}]),b}(c),fa=function a(b,c,e){var f=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;d(this,a),this.distance=b,this.distanceToRay=c,this.point=e,this.object=f},ga=function(a){function b(a,c){var e,f=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,g=3<arguments.length&&void 0!==arguments[3]?arguments[3]:8,i=4<arguments.length&&void 0!==arguments[4]?arguments[4]:8;return d(this,b),e=k(this,h(b).call(this)),e.root=new p(a,c),e.bias=L(0,f),e.maxPoints=L(1,I(g)),e.maxDepth=L(0,I(i)),e.pointCount=0,e}return g(b,a),f(b,[{key:"countPoints",value:function(a){return B(a)}},{key:"put",value:function(a,b){return C(a,b,this,this.root,0)}},{key:"remove",value:function(a){return D(a,this,this.root,null)}},{key:"fetch",value:function(a){return E(a,this,this.root)}},{key:"move",value:function(a,b){return F(a,b,this,this.root,null,0)}},{key:"findNearestPoint",value:function(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1/0,c=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],d=G(a,b,c,this.root);return null!==d&&(d.point=d.point.clone()),d}},{key:"findPoints",value:function(a,b){var c=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],d=[];return H(a,b,c,this.root,d),d}},{key:"raycast",value:function(a){var c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],d=m(h(b.prototype),"raycast",this).call(this,a);return 0<d.length&&this.testPoints(d,a,c),c}},{key:"testPoints",value:function(a,b,c){var d,e,f,g,h,k,l,m,n,o,p,q=b.params.Points.threshold;for(h=0,l=a.length;h<l;++h)if(n=a[h],o=n.points,null!==o)for(k=0,m=o.length;k<m;++k)p=o[k],g=b.ray.distanceSqToPoint(p),g<q*q&&(d=b.ray.closestPointToPoint(p,new N),e=b.ray.origin.distanceTo(d),e>=b.near&&e<=b.far&&(f=M(g),c.push(new fa(e,f,d,n.data[k]))))}}]),b}(da),ha=new P,ia=new N,ja=new N,u=new N,ka=function(){function a(){d(this,a)}return f(a,null,[{key:"recycleOctants",value:function(a,b){var c,d,e,f,g=a.min,h=a.getCenter(ja),k=a.getDimensions(u).multiplyScalar(.5),m=a.children,n=b.length;for(c=0;8>c;++c)for(e=T[c],ha.min.addVectors(g,ia.fromArray(e).multiply(k)),ha.max.addVectors(h,ia.fromArray(e).multiply(k)),d=0;d<n;++d)if(f=b[d],null!==f&&ha.min.equals(f.min)&&ha.max.equals(f.max)){m[c]=f,b[d]=null;break}}}]),a}();a.CubicOctant=W,a.Octant=c,a.OctantIterator=b,a.Octree=da,a.OctreeRaycaster=ba,a.OctreeUtils=ka,a.PointOctant=p,a.PointOctree=ga,a.RayPointIntersection=fa,a.edges=U,a.pattern=T,Object.defineProperty(a,"__esModule",{value:!0})});
